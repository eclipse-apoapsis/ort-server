/*
 * Copyright (C) 2024 The ORT Server Authors (See <https://github.com/eclipse-apoapsis/ort-server/blob/main/NOTICE>)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

import { VulnerabilityRating } from '@/helpers/get-status-class';

// Calculate the overall vulnerability rating based on the individual ratings,
// which are input as numbers 0-10.
// Algorithm:
// - calculate the maximum of the individual ratings
// - map the maximum to a vulnerability rating
//
// TODO:
// Now that we have scores and vectors available, we could do better with
// calculation of the overall vulnerability rating.
export function calcOverallVulnerability(
  ratings: (number | undefined)[]
): VulnerabilityRating {
  // Filter out undefined values
  const filteredRatings = ratings.filter(
    (rating): rating is number => rating !== undefined
  );

  // If there are no valid ratings, default to 'NONE'
  if (filteredRatings.length === 0) {
    return 'NONE';
  }

  const maxRating = Math.max(...filteredRatings);

  if (maxRating === 0) {
    return 'NONE';
  } else if (maxRating < 4) {
    return 'LOW';
  } else if (maxRating < 7) {
    return 'MEDIUM';
  } else if (maxRating < 9) {
    return 'HIGH';
  } else {
    return 'CRITICAL';
  }
}
