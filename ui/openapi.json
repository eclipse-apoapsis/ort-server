{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "ORT Server API",
    "license" : {
      "name" : "Apache-2.0",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0.0"
  },
  "externalDocs" : {
    "url" : "/"
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "ORT server"
  } ],
  "tags" : [ {
    "name" : "Health"
  }, {
    "name" : "Organizations"
  }, {
    "name" : "Products"
  }, {
    "name" : "Repositories"
  }, {
    "name" : "Runs"
  }, {
    "name" : "Admin"
  }, {
    "name" : "Versions"
  } ],
  "paths" : {
    "/api/v1/auth/oidc-config/cli" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Get the OpenID configuration for the ORT Server CLI",
        "operationId" : "getCliOidcConfig",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OidcConfig"
                },
                "examples" : {
                  "Get the OIDC configuration required for the ORT Server CLI" : {
                    "value" : {
                      "accessTokenUrl" : "https://auth.example.com/auth/realms/master/protocol/openid-connect/token",
                      "clientId" : "ort-server-api"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/liveness" : {
      "get" : {
        "tags" : [ "Health" ],
        "summary" : "Get the health of the ORT server",
        "operationId" : "GetLiveness",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Liveness"
                },
                "examples" : {
                  "Liveness" : {
                    "value" : {
                      "message" : "ORT Server running"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{runId}/downloads/report/{token}" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Download a report of an ORT run using a token",
        "description" : "This endpoint does not require authentication.",
        "operationId" : "GetReportByRunIdAndToken",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "token",
          "in" : "path",
          "description" : "The token providing access to the report file to be downloaded.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response body contains the requested report file.",
            "headers" : {
              "Content-Type" : {
                "description" : "The content type is set to the media type derived from the report file.",
                "required" : false,
                "deprecated" : false,
                "schema" : {
                  "type" : "string",
                  "title" : "String"
                }
              }
            }
          },
          "404" : {
            "description" : "The provided token could not be resolved or has expired.",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/admin/sync-roles" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Trigger the synchronization of Keycloak roles",
        "operationId" : "runPermissionsSync",
        "parameters" : [ ],
        "responses" : {
          "202" : {
            "description" : "Success.",
            "headers" : { }
          },
          "401" : {
            "description" : "Unauth.",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/users" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Get all users of the server",
        "operationId" : "getUsers",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the users.",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  },
                  "title" : "List_User"
                },
                "examples" : {
                  "Get all users of the server" : {
                    "value" : [ {
                      "username" : "user1",
                      "firstName" : "First1",
                      "lastName" : "Last1",
                      "email" : "user1@mail.com"
                    }, {
                      "username" : "user2",
                      "firstName" : "First2",
                      "lastName" : "Last2",
                      "email" : "user2@mail.com"
                    } ]
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Create a user, possibly with a password",
        "operationId" : "postUsers",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateUser"
              },
              "examples" : {
                "Create User" : {
                  "description" : "temporary=true means the password is for one-time use only and needs to be changed on first login. If password is not set, temporary is ignored.",
                  "value" : {
                    "username" : "newUser",
                    "firstName" : "First",
                    "lastName" : "Last",
                    "email" : "first.last@mail.com",
                    "password" : "password",
                    "temporary" : true
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Successfully created the user.",
            "headers" : { }
          },
          "500" : {
            "description" : "A user with the same username already exists.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Admin" ],
        "summary" : "Delete a user from the server",
        "operationId" : "deleteUserByUsername",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "The username of the user to delete.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted the user.",
            "headers" : { }
          },
          "500" : {
            "description" : "The user does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/content-management/sections/{sectionId}" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Get a dynamic UI text section by ID.",
        "operationId" : "GetSectionById",
        "parameters" : [ {
          "name" : "sectionId",
          "in" : "path",
          "description" : "The section's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentManagementSection"
                },
                "examples" : {
                  "Get section" : {
                    "value" : {
                      "id" : "footer",
                      "isEnabled" : true,
                      "markdown" : "## Footer",
                      "updatedAt" : "2024-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Admin" ],
        "summary" : "Update a dynamic UI text section by ID.",
        "operationId" : "PatchSectionById",
        "parameters" : [ {
          "name" : "sectionId",
          "in" : "path",
          "description" : "The section's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Set the values that should be updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateContentManagementSection"
              },
              "examples" : {
                "Update Section" : {
                  "value" : {
                    "isEnabled" : true,
                    "markdown" : "# This is a new footer"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentManagementSection"
                },
                "examples" : {
                  "Update Section" : {
                    "value" : {
                      "id" : "footer",
                      "isEnabled" : true,
                      "markdown" : "## Footer",
                      "updatedAt" : "2024-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/config/{key}" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Get the config for the provided key",
        "description" : "Get the value and isEnabled properties for a config key. If no value was set before, the default value is returned.",
        "operationId" : "GetConfigByKey",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "The config key.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ConfigKey"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Config"
                },
                "examples" : {
                  "Config values" : {
                    "value" : {
                      "value" : "http://example.com/icon.png",
                      "isEnabled" : false
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The config key is invalid.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Set the config entry for the provided key",
        "description" : "Set the value and isEnabled properties for a config key.",
        "operationId" : "SetConfigByKey",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "The config key.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ConfigKey"
          }
        } ],
        "requestBody" : {
          "description" : "The config value and isEnabled properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Config"
              },
              "examples" : {
                "Config value" : {
                  "value" : {
                    "value" : "http://example.com/icon.png",
                    "isEnabled" : true
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "The config entry was successfully set.",
            "headers" : { }
          },
          "400" : {
            "description" : "The config key is invalid.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get all organizations",
        "operationId" : "GetOrganizations",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_Organization"
                },
                "examples" : {
                  "List all organizations" : {
                    "value" : {
                      "data" : [ {
                        "id" : 1,
                        "name" : "First Organization",
                        "description" : "Description"
                      }, {
                        "id" : 2,
                        "name" : "Second Organization"
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 2,
                        "sortProperties" : [ {
                          "name" : "name",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Organizations" ],
        "summary" : "Create an organization",
        "operationId" : "PostOrganizations",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOrganization"
              },
              "examples" : {
                "Create Organization" : {
                  "value" : {
                    "name" : "My Organization",
                    "description" : "This is my organization."
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                },
                "examples" : {
                  "Create Organization" : {
                    "value" : {
                      "id" : 1,
                      "name" : "My Organization",
                      "description" : "This is my organization."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get details of an organization",
        "operationId" : "GetOrganizationById",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                },
                "examples" : {
                  "Get Organization" : {
                    "value" : {
                      "id" : 1,
                      "name" : "My Organization",
                      "description" : "This is my organization."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Organizations" ],
        "summary" : "Delete an organization",
        "operationId" : "DeleteOrganizationById",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Organizations" ],
        "summary" : "Update an organization",
        "operationId" : "PatchOrganizationById",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "description" : "Set the values that should be updated. To delete a value, set it explicitly to null.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrganization"
              },
              "examples" : {
                "Update Organization" : {
                  "value" : {
                    "name" : "My updated Organization",
                    "description" : "Updated description"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                },
                "examples" : {
                  "Update Organization" : {
                    "value" : {
                      "id" : 1,
                      "name" : "My updated Organization",
                      "description" : "Updated description."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}/products" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get all products of an organization",
        "operationId" : "GetOrganizationProducts",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_Product"
                },
                "examples" : {
                  "Get products of an organization" : {
                    "value" : {
                      "data" : [ {
                        "id" : 1,
                        "organizationId" : 2,
                        "name" : "My first product",
                        "description" : "Description"
                      }, {
                        "id" : 2,
                        "organizationId" : 2,
                        "name" : "My second product"
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 2,
                        "sortProperties" : [ {
                          "name" : "name",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Organizations" ],
        "summary" : "Create a product for an organization",
        "operationId" : "PostProduct",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateProduct"
              },
              "examples" : {
                "Create product" : {
                  "value" : {
                    "name" : "My product",
                    "description" : "Description"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                },
                "examples" : {
                  "Create product" : {
                    "value" : {
                      "id" : 1,
                      "organizationId" : 2,
                      "name" : "My product",
                      "description" : "Description"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}/infrastructure-services" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "List all infrastructure services of an organization",
        "operationId" : "GetInfrastructureServicesByOrganizationId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The ID of an organization.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_InfrastructureService"
                },
                "examples" : {
                  "List all infrastructure services for an organization" : {
                    "value" : {
                      "data" : [ {
                        "name" : "Artifactory",
                        "url" : "https://artifactory.example.org/releases",
                        "description" : "Artifactory repository",
                        "usernameSecretRef" : "artifactoryUsername",
                        "passwordSecretRef" : "artifactoryPassword",
                        "credentialsTypes" : [ ]
                      }, {
                        "name" : "GitHub",
                        "url" : "https://github.com",
                        "description" : "GitHub server",
                        "usernameSecretRef" : "gitHubUsername",
                        "passwordSecretRef" : "gitHubPassword",
                        "credentialsTypes" : [ ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 2,
                        "sortProperties" : [ {
                          "name" : "name",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Organizations" ],
        "summary" : "Create an infrastructure service for an organization",
        "operationId" : "PostInfrastructureServiceForOrganization",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateInfrastructureService"
              },
              "examples" : {
                "Create infrastructure service" : {
                  "value" : {
                    "name" : "Artifactory",
                    "url" : "https://artifactory.example.org/releases",
                    "description" : "Artifactory repository",
                    "usernameSecretRef" : "artifactoryUsername",
                    "passwordSecretRef" : "artifactoryPassword",
                    "credentialsTypes" : [ "NETRC_FILE" ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InfrastructureService"
                },
                "examples" : {
                  "Create infrastructure service" : {
                    "value" : {
                      "name" : "Artifactory",
                      "url" : "https://artifactory.example.org/releases",
                      "description" : "Artifactory repository",
                      "usernameSecretRef" : "artifactoryUsername",
                      "passwordSecretRef" : "artifactoryPassword",
                      "credentialsTypes" : [ ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}/infrastructure-services/{serviceName}" : {
      "delete" : {
        "tags" : [ "Organizations" ],
        "summary" : "Delete an infrastructure service from an organization",
        "operationId" : "DeleteInfrastructureServiceForOrganizationIdAndName",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the infrastructure service.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Organizations" ],
        "summary" : "Update an infrastructure service for an organization",
        "operationId" : "PatchInfrastructureServiceForOrganizationIdAndName",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the infrastructure service.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Set the values that should be updated. To delete a value, set it explicitly to null.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateInfrastructureService"
              },
              "examples" : {
                "Update infrastructure service" : {
                  "value" : {
                    "url" : "https://github.com",
                    "description" : "Updated description",
                    "usernameSecretRef" : "newGitHubUser",
                    "passwordSecretRef" : "newGitHubPassword",
                    "credentialsTypes" : [ "NETRC_FILE" ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InfrastructureService"
                },
                "examples" : {
                  "Update infrastructure service" : {
                    "value" : {
                      "name" : "GitHub",
                      "url" : "https://github.com",
                      "description" : "Updated description",
                      "usernameSecretRef" : "newGitHubUser",
                      "passwordSecretRef" : "newGitHubPassword",
                      "credentialsTypes" : [ "NETRC_FILE" ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}/roles/{role}" : {
      "put" : {
        "tags" : [ "Organizations" ],
        "summary" : "Assign an organization role to a user",
        "description" : "Assign an organization role to a user. If the user already has another role for the same organization, it will be replaced with the new one.",
        "operationId" : "PutOrganizationRoleToUser",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "role",
          "in" : "path",
          "description" : "The role to assign to the user.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/OrganizationRole"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Username"
              },
              "examples" : {
                "Add user identified by username 'abc123'." : {
                  "value" : {
                    "username" : "abc123"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "204" : {
            "description" : "Successfully added the role to the user.",
            "headers" : { }
          },
          "404" : {
            "description" : "Organization or role not found.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Organizations" ],
        "summary" : "Remove an organization role from a user",
        "operationId" : "DeleteOrganizationRoleFromUser",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "role",
          "in" : "path",
          "description" : "The role to remove from the user.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "The username of the user.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully removed the role from the user.",
            "headers" : { }
          },
          "404" : {
            "description" : "Organization or role not found.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}/vulnerabilities" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get vulnerabilities from an organization",
        "description" : "Get the vulnerabilities from latest successful advisor runs across the repositories in an  organization.",
        "operationId" : "GetVulnerabilitiesAcrossRepositoriesByOrganizationId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_OrganizationVulnerability"
                },
                "examples" : {
                  "Get vulnerabilities for organization" : {
                    "value" : {
                      "data" : [ {
                        "vulnerability" : {
                          "externalId" : "CVE-2021-1234",
                          "summary" : "A vulnerability",
                          "description" : "A description",
                          "references" : [ {
                            "url" : "https://example.com",
                            "scoringSystem" : "CVSS3",
                            "severity" : "HIGH",
                            "score" : 9.8,
                            "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                          } ]
                        },
                        "identifier" : {
                          "type" : "Maven",
                          "namespace" : "org.namespace",
                          "name" : "name",
                          "version" : "1.0"
                        },
                        "rating" : "HIGH",
                        "ortRunIds" : [ 40, 53 ],
                        "repositoriesCount" : 2
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "rating",
                          "direction" : "DESCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}/statistics/runs" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get statistics about ORT runs across the repositories of an organization",
        "operationId" : "GetOrtRunStatisticsByOrganizationId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The ID of an organization.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrtRunStatistics"
                },
                "examples" : {
                  "Get run statistics across repositories of an organization" : {
                    "value" : {
                      "issuesCount" : 5,
                      "issuesCountBySeverity" : {
                        "HINT" : 0,
                        "WARNING" : 4,
                        "ERROR" : 1
                      },
                      "packagesCount" : 452,
                      "ecosystems" : [ {
                        "name" : "Maven",
                        "count" : 422
                      }, {
                        "name" : "NPM",
                        "count" : 30
                      } ],
                      "vulnerabilitiesCount" : 3,
                      "vulnerabilitiesCountByRating" : {
                        "NONE" : 0,
                        "LOW" : 0,
                        "MEDIUM" : 2,
                        "HIGH" : 0,
                        "CRITICAL" : 1
                      },
                      "ruleViolationsCount" : 4,
                      "ruleViolationsCountBySeverity" : {
                        "HINT" : 3,
                        "WARNING" : 1,
                        "ERROR" : 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}/users" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get all users for an organization",
        "description" : "Get all users that have access rights for an organization, including the user privileges (groups) the user has within the organization. Fields available for sorting: 'username', 'firstName', 'lastName', 'email', 'group'. NOTE: This endpoint supports only one sort field. All fields other than  the first one are ignored.",
        "operationId" : "GetUsersForOrganization",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The ID of an organization.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_UserWithGroups"
                },
                "examples" : {
                  "Get users for organization" : {
                    "value" : {
                      "data" : [ {
                        "user" : {
                          "username" : "jdoe",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "johndoe@example.com"
                        },
                        "groups" : [ "READERS", "WRITERS" ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "username",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/plugins/{pluginType}/{pluginId}/templates/{templateName}/addToOrganization" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Add a plugin template to an organization",
        "description" : "Add a template to an organization. Only one template for a plugin can be assigned to an organization at the same time. An organization-specific template will override any global templates.",
        "operationId" : "AddTemplateToOrganization",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "The name of the template to add.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "organizationId",
          "in" : "query",
          "description" : "The ID of the organization to which the template should be added.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The template was successfully added to the organization.",
            "headers" : { }
          },
          "404" : {
            "description" : "The specified plugin, plugin template, or organization does not exist.",
            "headers" : { }
          },
          "400" : {
            "description" : "The template is already assigned to the organization.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/plugins/{pluginType}/{pluginId}/templates/{templateName}" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Get a templates for a plugin",
        "description" : "Retrieve the template with the given name for a specific plugin type and ID.",
        "operationId" : "GetPluginTemplate",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin to retrieve templates for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin to retrieve templates for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "The name of the template to retrieve.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The template for the specified plugin.",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PluginTemplate"
                },
                "examples" : {
                  "Example" : {
                    "value" : {
                      "name" : "exampleTemplate",
                      "pluginType" : "ADVISOR",
                      "pluginId" : "examplePlugin",
                      "options" : [ {
                        "option" : "exampleOption",
                        "type" : "STRING",
                        "value" : "exampleValue",
                        "isFinal" : true
                      } ],
                      "isGlobal" : false,
                      "organizationIds" : [ 1, 2 ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The specified plugin template does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Plugins" ],
        "summary" : "Update the options of a plugin template",
        "description" : "Update the options of a plugin template.",
        "operationId" : "UpdatePluginTemplateOptions",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "The name of the template to update.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "The list of plugin option templates.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PluginOptionTemplate"
                },
                "title" : "List_PluginOptionTemplate"
              },
              "examples" : {
                "Example" : {
                  "value" : [ {
                    "option" : "option1",
                    "type" : "STRING",
                    "value" : "defaultValue",
                    "isFinal" : false
                  }, {
                    "option" : "option2",
                    "type" : "BOOLEAN",
                    "value" : "true",
                    "isFinal" : true
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The options were successfully updated.",
            "headers" : { }
          },
          "400" : {
            "description" : "The specified plugin is not installed or the template could not be updated.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Create a new plugin template",
        "description" : "Create a new plugin template.",
        "operationId" : "CreatePluginTemplate",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "The name of the template to create.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "The list of plugin option templates.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PluginOptionTemplate"
                },
                "title" : "List_PluginOptionTemplate"
              },
              "examples" : {
                "Example" : {
                  "value" : [ {
                    "option" : "option1",
                    "type" : "STRING",
                    "value" : "defaultValue",
                    "isFinal" : false
                  }, {
                    "option" : "option2",
                    "type" : "BOOLEAN",
                    "value" : "true",
                    "isFinal" : true
                  } ]
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The template was successfully created.",
            "headers" : { }
          },
          "400" : {
            "description" : "The specified plugin is not installed or the template could not be created.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Plugins" ],
        "summary" : "Delete a plugin template",
        "description" : "Delete a plugin template for a specific plugin. This will remove the template and its configuration.",
        "operationId" : "DeletePluginTemplate",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "The name of the plugin template to delete.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The plugin template was deleted successfully.",
            "headers" : { }
          },
          "400" : {
            "description" : "The specified plugin is not installed.",
            "headers" : { }
          },
          "404" : {
            "description" : "The specified plugin or template was not found.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/plugins/{pluginType}/{pluginId}/templates/{templateName}/disableGlobal" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Disable a global plugin template",
        "description" : "Disable a global plugin template for a specific plugin. This will disable the template globally, but it can still be used in organization-specific configurations.",
        "operationId" : "DisableGlobalPluginTemplate",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "The name of the plugin template to disable globally.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully disabled the global plugin template.",
            "headers" : { }
          },
          "400" : {
            "description" : "The specified plugin is not installed or the template could not be disabled.",
            "headers" : { }
          },
          "404" : {
            "description" : "The specified plugin template does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/plugins/{pluginType}/{pluginId}/disable" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Disable an ORT plugin globally",
        "description" : "Disable an ORT plugin globally to make it generally unavailable.",
        "operationId" : "DisablePlugin",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin to disable.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin to disable.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "The plugin was disabled successfully.",
            "headers" : { }
          },
          "404" : {
            "description" : "The plugin was not found.",
            "headers" : { }
          },
          "304" : {
            "description" : "The plugin is already disabled.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/plugins/{pluginType}/{pluginId}/templates/{templateName}/enableGlobal" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Enable a global plugin template",
        "description" : "Enable a global plugin template for a specific plugin. This will enable the template globally for all organizations, but it can still be overwritten by organization-specific templates.",
        "operationId" : "EnableGlobalPluginTemplate",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "The name of the plugin template to enable globally.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully enabled the global plugin template.",
            "headers" : { }
          },
          "400" : {
            "description" : "The specified plugin is not installed or the template could not be enabled.",
            "headers" : { }
          },
          "404" : {
            "description" : "The specified plugin template does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/plugins/{pluginType}/{pluginId}/enable" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Enable an ORT plugin globally",
        "description" : "Enable an ORT plugin globally to make it generally available to all organizations.",
        "operationId" : "EnablePlugin",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin to enable.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin to enable.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The plugin was enabled successfully.",
            "headers" : { }
          },
          "404" : {
            "description" : "The plugin was not found.",
            "headers" : { }
          },
          "304" : {
            "description" : "The plugin is already enabled.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/plugins" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Get installed ORT plugins",
        "description" : "Get a list with detailed information about all installed ORT plugins.",
        "operationId" : "GetInstalledPlugins",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PluginDescriptor"
                  },
                  "title" : "List_PluginDescriptor"
                },
                "examples" : {
                  "List of ORT plugins" : {
                    "value" : [ {
                      "id" : "VulnerableCode",
                      "type" : "ADVISOR",
                      "displayName" : "VulnerableCode",
                      "description" : "An advisor that uses a VulnerableCode instance to find vulnerabilities.",
                      "options" : [ {
                        "name" : "serverUrl",
                        "description" : "The base URL of the VulnerableCode REST API.",
                        "type" : "STRING",
                        "defaultValue" : "https://public.vulnerablecode.io/api/",
                        "isNullable" : false,
                        "isRequired" : false
                      } ],
                      "enabled" : true
                    }, {
                      "id" : "NPM",
                      "type" : "PACKAGE_MANAGER",
                      "displayName" : "NPM",
                      "description" : "The Node package manager for Node.js.",
                      "options" : [ {
                        "name" : "legacyPeerDeps",
                        "description" : "If true, the '--legacy-peer-deps' flag is passed to NPM.",
                        "type" : "BOOLEAN",
                        "defaultValue" : "false",
                        "isNullable" : false,
                        "isRequired" : false
                      } ],
                      "enabled" : false
                    } ]
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}/plugins" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "Get available plugins for a repository",
        "description" : "Get a list of all available plugins for a specific repository.",
        "operationId" : "GetPluginsForRepository",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The ID of the repository to retrieve plugins for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of plugins available for the repository.",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PreconfiguredPluginDescriptor"
                  },
                  "title" : "List_PreconfiguredPluginDescriptor"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/plugins/{pluginType}/{pluginId}/templates" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Get all templates for a plugin",
        "description" : "Retrieve the templates for a specific plugin type and ID.",
        "operationId" : "GetPluginTemplates",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin to retrieve templates for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin to retrieve templates for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of templates for the specified plugin.",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PluginTemplate"
                  },
                  "title" : "List_PluginTemplate"
                },
                "examples" : {
                  "Example" : {
                    "value" : [ {
                      "name" : "exampleTemplate",
                      "pluginType" : "ADVISOR",
                      "pluginId" : "examplePlugin",
                      "options" : [ {
                        "option" : "exampleOption",
                        "type" : "STRING",
                        "value" : "exampleValue",
                        "isFinal" : true
                      } ],
                      "isGlobal" : false,
                      "organizationIds" : [ 1, 2 ]
                    } ]
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The specified plugin does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/admin/plugins/{pluginType}/{pluginId}/templates/{templateName}/removeFromOrganization" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Remove a plugin template from an organization",
        "description" : "Remove a plugin template from an organization. If any global templates are enabled for the plugin, they will now apply to the organization.",
        "operationId" : "RemoveTemplateFromOrganization",
        "parameters" : [ {
          "name" : "pluginType",
          "in" : "path",
          "description" : "The type of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "pluginId",
          "in" : "path",
          "description" : "The ID of the plugin this template is for.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "The name of the template to remove.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "organizationId",
          "in" : "query",
          "description" : "The ID of the organization from which the template should be removed.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The template was successfully removed from the organization.",
            "headers" : { }
          },
          "404" : {
            "description" : "The specified plugin, plugin template, or organization does not exist.",
            "headers" : { }
          },
          "400" : {
            "description" : "The template is not assigned to the organization.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/products/{productId}" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get details of a product",
        "operationId" : "GetProductById",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                },
                "examples" : {
                  "Create Product" : {
                    "value" : {
                      "id" : 1,
                      "organizationId" : 2,
                      "name" : "My Product",
                      "description" : "Description"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Products" ],
        "summary" : "Delete a product",
        "operationId" : "DeleteProductById",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Products" ],
        "summary" : "Update a product",
        "operationId" : "PatchProductById",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "description" : "Set the values that should be updated. To delete a value, set it explicitly to null.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateProduct"
              },
              "examples" : {
                "Update Product" : {
                  "value" : {
                    "name" : "Update Product",
                    "description" : "Updated product"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                },
                "examples" : {
                  "Update Product" : {
                    "value" : {
                      "id" : 1,
                      "organizationId" : 2,
                      "name" : "My updated product",
                      "description" : "Updated product."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/products/{productId}/repositories" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get all repositories of a product",
        "operationId" : "GetRepositoriesByProductId",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_Repository"
                },
                "examples" : {
                  "Get repositories of a product" : {
                    "value" : {
                      "data" : [ {
                        "id" : 1,
                        "organizationId" : 2,
                        "productId" : 3,
                        "type" : "GIT",
                        "url" : "https://example.com/first/repo.git"
                      }, {
                        "id" : 2,
                        "organizationId" : 3,
                        "productId" : 4,
                        "type" : "SUBVERSION",
                        "url" : "https://example.com/second/repo"
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 2,
                        "sortProperties" : [ {
                          "name" : "url",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Products" ],
        "summary" : "Create a repository for a product",
        "operationId" : "CreateRepository",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateRepository"
              },
              "examples" : {
                "Create repository" : {
                  "value" : {
                    "type" : "GIT",
                    "url" : "https://example.com/namspace/repo.git"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Repository"
                },
                "examples" : {
                  "Create repository" : {
                    "value" : {
                      "id" : 1,
                      "organizationId" : 2,
                      "productId" : 3,
                      "type" : "GIT",
                      "url" : "https://example.com/namspace/repo.git"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/products/{productId}/roles/{role}" : {
      "put" : {
        "tags" : [ "Products" ],
        "summary" : "Assign a product role to a user",
        "description" : "Assign a product role to a user. If the user already has another role for the same product, it will be replaced with the new one.",
        "operationId" : "PutProductRoleToUser",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "role",
          "in" : "path",
          "description" : "The role to assign to the user.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ProductRole"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Username"
              },
              "examples" : {
                "Add user identified by username 'abc123'." : {
                  "value" : {
                    "username" : "abc123"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "204" : {
            "description" : "Successfully added the role to the user.",
            "headers" : { }
          },
          "404" : {
            "description" : "Product or role not found.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Products" ],
        "summary" : "Remove a product role from a user",
        "operationId" : "DeleteProductRoleFromUser",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "role",
          "in" : "path",
          "description" : "The role to remove from the user.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ProductRole"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "The username of the user.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully removed the role from the user.",
            "headers" : { }
          },
          "404" : {
            "description" : "Product or role not found.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/products/{productId}/vulnerabilities" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get vulnerabilities from a product",
        "description" : "Get the vulnerabilities from latest successful advisor runs across the repositories in a product.",
        "operationId" : "GetVulnerabilitiesAcrossRepositoriesByProductId",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_ProductVulnerability"
                },
                "examples" : {
                  "Get vulnerabilities for product" : {
                    "value" : {
                      "data" : [ {
                        "vulnerability" : {
                          "externalId" : "CVE-2021-1234",
                          "summary" : "A vulnerability",
                          "description" : "A description",
                          "references" : [ {
                            "url" : "https://example.com",
                            "scoringSystem" : "CVSS3",
                            "severity" : "HIGH",
                            "score" : 9.8,
                            "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                          } ]
                        },
                        "identifier" : {
                          "type" : "Maven",
                          "namespace" : "org.namespace",
                          "name" : "name",
                          "version" : "1.0"
                        },
                        "rating" : "HIGH",
                        "ortRunIds" : [ 40, 53 ],
                        "repositoriesCount" : 2
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "rating",
                          "direction" : "DESCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/products/{productId}/statistics/runs" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get statistics about ORT runs across the repositories of a product",
        "operationId" : "GetOrtRunStatisticsByProductId",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrtRunStatistics"
                },
                "examples" : {
                  "Get run statistics across repositories of a product" : {
                    "value" : {
                      "issuesCount" : 131,
                      "issuesCountBySeverity" : {
                        "HINT" : 40,
                        "WARNING" : 0,
                        "ERROR" : 91
                      },
                      "packagesCount" : 953,
                      "ecosystems" : [ {
                        "name" : "Maven",
                        "count" : 578
                      }, {
                        "name" : "NPM",
                        "count" : 326
                      }, {
                        "name" : "PyPI",
                        "count" : 49
                      } ],
                      "vulnerabilitiesCount" : 163,
                      "vulnerabilitiesCountByRating" : {
                        "NONE" : 11,
                        "LOW" : 1,
                        "MEDIUM" : 47,
                        "HIGH" : 83,
                        "CRITICAL" : 21
                      },
                      "ruleViolationsCount" : 104,
                      "ruleViolationsCountBySeverity" : {
                        "HINT" : 0,
                        "WARNING" : 6,
                        "ERROR" : 98
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/products/{productId}/runs" : {
      "post" : {
        "tags" : [ "Products" ],
        "summary" : "Create ORT runs for repositories under a product",
        "description" : "Create ORT runs for all repositories under a product or specific repositories",
        "operationId" : "postOrtRunsForProduct",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOrtRun"
              },
              "examples" : {
                "Create ORT runs for all repositories using minimal job configurations" : {
                  "value" : {
                    "revision" : "main",
                    "jobConfigs" : {
                      "analyzer" : {
                        "allowDynamicVersions" : false,
                        "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                        "skipExcluded" : true,
                        "keepAliveWorker" : false
                      },
                      "advisor" : {
                        "advisors" : [ ],
                        "skipExcluded" : true,
                        "keepAliveWorker" : false
                      }
                    },
                    "labels" : { },
                    "repositoryIds" : [ ],
                    "repositoryFailedIds" : [ ]
                  }
                },
                "Create ORT runs for specific repositories using minimal job configurations" : {
                  "value" : {
                    "revision" : "main",
                    "jobConfigs" : {
                      "analyzer" : {
                        "allowDynamicVersions" : false,
                        "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                        "skipExcluded" : true,
                        "keepAliveWorker" : false
                      },
                      "advisor" : {
                        "advisors" : [ ],
                        "skipExcluded" : true,
                        "keepAliveWorker" : false
                      }
                    },
                    "labels" : { },
                    "repositoryIds" : [ 1, 2 ],
                    "repositoryFailedIds" : [ ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrtRun"
                  },
                  "title" : "List_OrtRun"
                },
                "examples" : {
                  "Create ORT runs" : {
                    "value" : [ {
                      "id" : 1,
                      "index" : 2,
                      "organizationId" : 1,
                      "productId" : 1,
                      "repositoryId" : 1,
                      "revision" : "main",
                      "createdAt" : "2024-01-01T00:00:00Z",
                      "jobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "resolvedJobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "jobs" : {
                        "analyzer" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "allowDynamicVersions" : true,
                            "disabledPackageManagers" : [ "NPM", "SBT" ],
                            "enabledPackageManagers" : [ "Gradle", "Maven" ],
                            "environmentConfig" : {
                              "infrastructureServices" : [ {
                                "name" : "Artifactory",
                                "url" : "https://artifactory.example.org/repo",
                                "description" : "Our Artifactory server",
                                "usernameSecretRef" : "artifactoryUsername",
                                "passwordSecretRef" : "artifactoryPassword",
                                "credentialsTypes" : [ ]
                              } ],
                              "environmentDefinitions" : {
                                "maven" : [ {
                                  "service" : "Artifactory",
                                  "id" : "repo"
                                } ]
                              },
                              "environmentVariables" : [ ],
                              "strict" : true
                            },
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                            "packageCurationProviders" : [ {
                              "type" : "ClearlyDefined",
                              "id" : "ClearlyDefined",
                              "enabled" : true,
                              "options" : {
                                "serverUrl" : "https://api.clearlydefined.io",
                                "minTotalLicenseScore" : "0"
                              },
                              "secrets" : { }
                            } ],
                            "packageManagerOptions" : {
                              "Gradle" : {
                                "mustRunAfter" : [ "Maven" ],
                                "options" : {
                                  "gradleVersion" : "8.1.1"
                                }
                              }
                            },
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "advisor" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "advisors" : [ "VulnerableCode" ],
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "scanner" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "projectScanners" : [ "SCANOSS" ],
                            "scanners" : [ "ScanCode" ],
                            "skipConcluded" : true,
                            "skipExcluded" : true,
                            "keepAliveWorker" : false,
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                          },
                          "status" : "CREATED"
                        },
                        "evaluator" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "packageConfigurationProviders" : [ {
                              "type" : "OrtConfig",
                              "id" : "OrtConfig",
                              "enabled" : true,
                              "options" : { },
                              "secrets" : { }
                            } ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "reporter" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "formats" : [ "WebApp" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED",
                          "reportFilenames" : [ "AsciiDoc_disclosure_document.pdf", "AsciiDoc_vulnerability_report.pdf", "scan-report-web-app.html" ]
                        },
                        "notifier" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        }
                      },
                      "status" : "CREATED",
                      "labels" : {
                        "label key" : "label value"
                      },
                      "issues" : [ ],
                      "traceId" : "35b67724-a85b-4cc3-b2a4-60fd914634e7"
                    }, {
                      "id" : 2,
                      "index" : 1,
                      "organizationId" : 1,
                      "productId" : 1,
                      "repositoryId" : 2,
                      "revision" : "main",
                      "createdAt" : "2024-01-01T00:00:00Z",
                      "jobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "resolvedJobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "jobs" : {
                        "analyzer" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "allowDynamicVersions" : true,
                            "disabledPackageManagers" : [ "NPM", "SBT" ],
                            "enabledPackageManagers" : [ "Gradle", "Maven" ],
                            "environmentConfig" : {
                              "infrastructureServices" : [ {
                                "name" : "Artifactory",
                                "url" : "https://artifactory.example.org/repo",
                                "description" : "Our Artifactory server",
                                "usernameSecretRef" : "artifactoryUsername",
                                "passwordSecretRef" : "artifactoryPassword",
                                "credentialsTypes" : [ ]
                              } ],
                              "environmentDefinitions" : {
                                "maven" : [ {
                                  "service" : "Artifactory",
                                  "id" : "repo"
                                } ]
                              },
                              "environmentVariables" : [ ],
                              "strict" : true
                            },
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                            "packageCurationProviders" : [ {
                              "type" : "ClearlyDefined",
                              "id" : "ClearlyDefined",
                              "enabled" : true,
                              "options" : {
                                "serverUrl" : "https://api.clearlydefined.io",
                                "minTotalLicenseScore" : "0"
                              },
                              "secrets" : { }
                            } ],
                            "packageManagerOptions" : {
                              "Gradle" : {
                                "mustRunAfter" : [ "Maven" ],
                                "options" : {
                                  "gradleVersion" : "8.1.1"
                                }
                              }
                            },
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "advisor" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "advisors" : [ "VulnerableCode" ],
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "scanner" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "projectScanners" : [ "SCANOSS" ],
                            "scanners" : [ "ScanCode" ],
                            "skipConcluded" : true,
                            "skipExcluded" : true,
                            "keepAliveWorker" : false,
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                          },
                          "status" : "CREATED"
                        },
                        "evaluator" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "packageConfigurationProviders" : [ {
                              "type" : "OrtConfig",
                              "id" : "OrtConfig",
                              "enabled" : true,
                              "options" : { },
                              "secrets" : { }
                            } ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "reporter" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "formats" : [ "WebApp" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED",
                          "reportFilenames" : [ "AsciiDoc_disclosure_document.pdf", "AsciiDoc_vulnerability_report.pdf", "scan-report-web-app.html" ]
                        },
                        "notifier" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        }
                      },
                      "status" : "CREATED",
                      "labels" : {
                        "label key" : "label value"
                      },
                      "issues" : [ ],
                      "traceId" : "35b67724-a85b-4cc3-b2a4-60fd914634e7"
                    } ]
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request, e.g., provided repository IDs do not belong to the product.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/products/{productId}/users" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get all users for a product",
        "description" : "Get all users that have access rights for a product, including the user privileges (groups) the user has within the product. Fields available for sorting: 'username', 'firstName', 'lastName', 'email', 'group'. NOTE: This endpoint supports only one sort field. All fields other than  the first one are ignored.",
        "operationId" : "GetUsersForProduct",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_UserWithGroups"
                },
                "examples" : {
                  "Get users for product" : {
                    "value" : {
                      "data" : [ {
                        "user" : {
                          "username" : "jdoe",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "johndoe@example.com"
                        },
                        "groups" : [ "READERS", "WRITERS" ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "username",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "Get details of a repository",
        "operationId" : "GetRepositoryById",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Repository"
                },
                "examples" : {
                  "Get Repository" : {
                    "value" : {
                      "id" : 1,
                      "organizationId" : 2,
                      "productId" : 3,
                      "type" : "GIT",
                      "url" : "https://example.com/org/repo.git"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Repositories" ],
        "summary" : "Delete a repository",
        "operationId" : "DeleteRepositoryById",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Repositories" ],
        "summary" : "Update a repository",
        "operationId" : "PatchRepositoryById",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "description" : "Set the values that should be updated. To delete a value, set it explicitly to null.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateRepository"
              },
              "examples" : {
                "Update Repository" : {
                  "value" : {
                    "type" : "GIT_REPO",
                    "url" : "https://example.com/org/updated-repo.git",
                    "description" : "Updated repository description."
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Repository"
                },
                "examples" : {
                  "Update Repository" : {
                    "value" : {
                      "id" : 1,
                      "organizationId" : 2,
                      "productId" : 3,
                      "type" : "GIT_REPO",
                      "url" : "https://example.com/org/updated-repo.git",
                      "description" : "Updated repository description."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}/runs" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "Get all ORT runs of a repository",
        "operationId" : "getOrtRunsByRepositoryId",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_OrtRunSummary"
                },
                "examples" : {
                  "Get ORT runs" : {
                    "value" : {
                      "data" : [ {
                        "id" : 2,
                        "index" : 1,
                        "organizationId" : 1,
                        "productId" : 1,
                        "repositoryId" : 1,
                        "revision" : "main",
                        "createdAt" : "2024-01-01T00:00:00Z",
                        "finishedAt" : "2024-01-01T00:15:00Z",
                        "jobs" : {
                          "analyzer" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:50:00Z",
                            "startedAt" : "2023-12-31T23:51:00Z",
                            "finishedAt" : "2023-12-31T23:52:00Z",
                            "status" : "FINISHED"
                          },
                          "advisor" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:52:00Z",
                            "startedAt" : "2023-12-31T23:53:00Z",
                            "finishedAt" : "2023-12-31T23:54:00Z",
                            "status" : "FINISHED"
                          },
                          "scanner" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:52:00Z",
                            "startedAt" : "2023-12-31T23:53:00Z",
                            "finishedAt" : "2023-12-31T23:54:00Z",
                            "status" : "FINISHED"
                          },
                          "evaluator" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:54:00Z",
                            "startedAt" : "2023-12-31T23:55:00Z",
                            "finishedAt" : "2023-12-31T23:56:00Z",
                            "status" : "FINISHED"
                          },
                          "reporter" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:56:00Z",
                            "startedAt" : "2023-12-31T23:57:00Z",
                            "finishedAt" : "2023-12-31T23:58:00Z",
                            "status" : "FINISHED"
                          }
                        },
                        "status" : "FINISHED",
                        "labels" : {
                          "label key" : "label value"
                        },
                        "resolvedJobConfigContext" : "c80ef3bcd2bec428da923a188dd0870b1153995c",
                        "userDisplayName" : {
                          "username" : "john.doe",
                          "fullName" : "John Doe"
                        }
                      }, {
                        "id" : 3,
                        "index" : 2,
                        "organizationId" : 1,
                        "productId" : 1,
                        "repositoryId" : 1,
                        "revision" : "main",
                        "createdAt" : "2024-01-01T00:00:00Z",
                        "finishedAt" : "2024-01-01T00:15:00Z",
                        "jobs" : {
                          "analyzer" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:55:00Z",
                            "startedAt" : "2023-12-31T23:56:00Z",
                            "finishedAt" : "2023-12-31T23:57:00Z",
                            "status" : "FINISHED"
                          },
                          "advisor" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:57:00Z",
                            "startedAt" : "2023-12-31T23:58:00Z",
                            "finishedAt" : "2023-12-31T23:59:00Z",
                            "status" : "FINISHED"
                          },
                          "scanner" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:57:00Z",
                            "startedAt" : "2023-12-31T23:58:00Z",
                            "finishedAt" : "2023-12-31T23:59:00Z",
                            "status" : "FINISHED"
                          },
                          "evaluator" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:59:00Z",
                            "startedAt" : "2024-01-01T00:00:00Z",
                            "status" : "RUNNING"
                          }
                        },
                        "status" : "ACTIVE",
                        "labels" : {
                          "label key" : "label value"
                        },
                        "resolvedJobConfigContext" : "32f955941e94d0a318e1c985903f42af924e9050",
                        "userDisplayName" : {
                          "username" : "john.doe",
                          "fullName" : "John Doe"
                        }
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 2,
                        "sortProperties" : [ {
                          "name" : "createdAt",
                          "direction" : "DESCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Repositories" ],
        "summary" : "Create an ORT run for a repository",
        "operationId" : "postOrtRun",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOrtRun"
              },
              "examples" : {
                "Create ORT run using minimal job configurations (defaults)" : {
                  "value" : {
                    "revision" : "main",
                    "jobConfigs" : {
                      "analyzer" : {
                        "allowDynamicVersions" : false,
                        "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                        "skipExcluded" : true,
                        "keepAliveWorker" : false
                      },
                      "advisor" : {
                        "advisors" : [ ],
                        "skipExcluded" : true,
                        "keepAliveWorker" : false
                      }
                    },
                    "labels" : { },
                    "repositoryIds" : [ ],
                    "repositoryFailedIds" : [ ]
                  }
                },
                "Create ORT run using full job configurations" : {
                  "value" : {
                    "revision" : "main",
                    "path" : "optional VCS sub-path",
                    "jobConfigs" : {
                      "analyzer" : {
                        "allowDynamicVersions" : true,
                        "disabledPackageManagers" : [ "NPM", "SBT" ],
                        "enabledPackageManagers" : [ "Gradle", "Maven" ],
                        "environmentConfig" : {
                          "infrastructureServices" : [ {
                            "name" : "Artifactory",
                            "url" : "https://artifactory.example.org/repo",
                            "description" : "Our Artifactory server",
                            "usernameSecretRef" : "artifactoryUsername",
                            "passwordSecretRef" : "artifactoryPassword",
                            "credentialsTypes" : [ ]
                          } ],
                          "environmentDefinitions" : {
                            "maven" : [ {
                              "service" : "Artifactory",
                              "id" : "repo"
                            } ]
                          },
                          "environmentVariables" : [ ],
                          "strict" : true
                        },
                        "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                        "packageCurationProviders" : [ {
                          "type" : "ClearlyDefined",
                          "id" : "ClearlyDefined",
                          "enabled" : true,
                          "options" : {
                            "serverUrl" : "https://api.clearlydefined.io",
                            "minTotalLicenseScore" : "0"
                          },
                          "secrets" : { }
                        } ],
                        "packageManagerOptions" : {
                          "Gradle" : {
                            "mustRunAfter" : [ "Maven" ],
                            "options" : {
                              "gradleVersion" : "8.1.1"
                            }
                          }
                        },
                        "skipExcluded" : true,
                        "keepAliveWorker" : false
                      },
                      "advisor" : {
                        "advisors" : [ "VulnerableCode" ],
                        "skipExcluded" : true,
                        "keepAliveWorker" : false
                      },
                      "scanner" : {
                        "projectScanners" : [ "SCANOSS" ],
                        "scanners" : [ "ScanCode" ],
                        "skipConcluded" : true,
                        "skipExcluded" : true,
                        "keepAliveWorker" : false,
                        "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                      },
                      "evaluator" : {
                        "packageConfigurationProviders" : [ {
                          "type" : "OrtConfig",
                          "id" : "OrtConfig",
                          "enabled" : true,
                          "options" : { },
                          "secrets" : { }
                        } ],
                        "keepAliveWorker" : false
                      },
                      "reporter" : {
                        "formats" : [ "WebApp" ],
                        "keepAliveWorker" : false
                      },
                      "notifier" : {
                        "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                        "keepAliveWorker" : false
                      },
                      "ruleSet" : "default"
                    },
                    "labels" : {
                      "label key" : "label value"
                    },
                    "jobConfigContext" : "optional context",
                    "repositoryIds" : [ ],
                    "repositoryFailedIds" : [ ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrtRun"
                },
                "examples" : {
                  "Create ORT run" : {
                    "value" : {
                      "id" : 1,
                      "index" : 2,
                      "organizationId" : 1,
                      "productId" : 1,
                      "repositoryId" : 1,
                      "revision" : "main",
                      "createdAt" : "2024-01-01T00:00:00Z",
                      "jobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "resolvedJobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "jobs" : {
                        "analyzer" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "allowDynamicVersions" : true,
                            "disabledPackageManagers" : [ "NPM", "SBT" ],
                            "enabledPackageManagers" : [ "Gradle", "Maven" ],
                            "environmentConfig" : {
                              "infrastructureServices" : [ {
                                "name" : "Artifactory",
                                "url" : "https://artifactory.example.org/repo",
                                "description" : "Our Artifactory server",
                                "usernameSecretRef" : "artifactoryUsername",
                                "passwordSecretRef" : "artifactoryPassword",
                                "credentialsTypes" : [ ]
                              } ],
                              "environmentDefinitions" : {
                                "maven" : [ {
                                  "service" : "Artifactory",
                                  "id" : "repo"
                                } ]
                              },
                              "environmentVariables" : [ ],
                              "strict" : true
                            },
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                            "packageCurationProviders" : [ {
                              "type" : "ClearlyDefined",
                              "id" : "ClearlyDefined",
                              "enabled" : true,
                              "options" : {
                                "serverUrl" : "https://api.clearlydefined.io",
                                "minTotalLicenseScore" : "0"
                              },
                              "secrets" : { }
                            } ],
                            "packageManagerOptions" : {
                              "Gradle" : {
                                "mustRunAfter" : [ "Maven" ],
                                "options" : {
                                  "gradleVersion" : "8.1.1"
                                }
                              }
                            },
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "advisor" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "advisors" : [ "VulnerableCode" ],
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "scanner" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "projectScanners" : [ "SCANOSS" ],
                            "scanners" : [ "ScanCode" ],
                            "skipConcluded" : true,
                            "skipExcluded" : true,
                            "keepAliveWorker" : false,
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                          },
                          "status" : "CREATED"
                        },
                        "evaluator" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "packageConfigurationProviders" : [ {
                              "type" : "OrtConfig",
                              "id" : "OrtConfig",
                              "enabled" : true,
                              "options" : { },
                              "secrets" : { }
                            } ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "reporter" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "formats" : [ "WebApp" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED",
                          "reportFilenames" : [ "AsciiDoc_disclosure_document.pdf", "AsciiDoc_vulnerability_report.pdf", "scan-report-web-app.html" ]
                        },
                        "notifier" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        }
                      },
                      "status" : "CREATED",
                      "labels" : {
                        "label key" : "label value"
                      },
                      "issues" : [ ],
                      "traceId" : "35b67724-a85b-4cc3-b2a4-60fd914634e7"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}/runs/{ortRunIndex}" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "Get details of an ORT run of a repository",
        "operationId" : "getOrtRunByIndex",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "ortRunIndex",
          "in" : "path",
          "description" : "The index of an ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrtRun"
                },
                "examples" : {
                  "Get ORT run" : {
                    "value" : {
                      "id" : 1,
                      "index" : 2,
                      "organizationId" : 1,
                      "productId" : 1,
                      "repositoryId" : 1,
                      "revision" : "main",
                      "createdAt" : "2024-01-01T00:00:00Z",
                      "jobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "resolvedJobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "jobs" : {
                        "analyzer" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "allowDynamicVersions" : true,
                            "disabledPackageManagers" : [ "NPM", "SBT" ],
                            "enabledPackageManagers" : [ "Gradle", "Maven" ],
                            "environmentConfig" : {
                              "infrastructureServices" : [ {
                                "name" : "Artifactory",
                                "url" : "https://artifactory.example.org/repo",
                                "description" : "Our Artifactory server",
                                "usernameSecretRef" : "artifactoryUsername",
                                "passwordSecretRef" : "artifactoryPassword",
                                "credentialsTypes" : [ ]
                              } ],
                              "environmentDefinitions" : {
                                "maven" : [ {
                                  "service" : "Artifactory",
                                  "id" : "repo"
                                } ]
                              },
                              "environmentVariables" : [ ],
                              "strict" : true
                            },
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                            "packageCurationProviders" : [ {
                              "type" : "ClearlyDefined",
                              "id" : "ClearlyDefined",
                              "enabled" : true,
                              "options" : {
                                "serverUrl" : "https://api.clearlydefined.io",
                                "minTotalLicenseScore" : "0"
                              },
                              "secrets" : { }
                            } ],
                            "packageManagerOptions" : {
                              "Gradle" : {
                                "mustRunAfter" : [ "Maven" ],
                                "options" : {
                                  "gradleVersion" : "8.1.1"
                                }
                              }
                            },
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "advisor" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "advisors" : [ "VulnerableCode" ],
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "scanner" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "projectScanners" : [ "SCANOSS" ],
                            "scanners" : [ "ScanCode" ],
                            "skipConcluded" : true,
                            "skipExcluded" : true,
                            "keepAliveWorker" : false,
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                          },
                          "status" : "CREATED"
                        },
                        "evaluator" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "packageConfigurationProviders" : [ {
                              "type" : "OrtConfig",
                              "id" : "OrtConfig",
                              "enabled" : true,
                              "options" : { },
                              "secrets" : { }
                            } ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "reporter" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "formats" : [ "WebApp" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED",
                          "reportFilenames" : [ "AsciiDoc_disclosure_document.pdf", "AsciiDoc_vulnerability_report.pdf", "scan-report-web-app.html" ]
                        },
                        "notifier" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        }
                      },
                      "status" : "ACTIVE",
                      "labels" : {
                        "label key" : "label value"
                      },
                      "issues" : [ ],
                      "resolvedJobConfigContext" : "32f955941e94d0a318e1c985903f42af924e9050",
                      "traceId" : "35b67725-a85b-4cc3-b2a4-60fd914634e7"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Repositories" ],
        "summary" : "Delete an ORT run of a repository",
        "description" : "This operation deletes an ORT run and all generated data, including the generated reports.",
        "operationId" : "deleteOrtRunByIndex",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "ortRunIndex",
          "in" : "path",
          "description" : "The index of an ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted the ORT run.",
            "headers" : { }
          },
          "404" : {
            "description" : "The ORT run does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}/infrastructure-services" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "List all infrastructure services of a repository",
        "operationId" : "GetInfrastructureServicesByRepositoryId",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The ID of an repository.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_InfrastructureService"
                },
                "examples" : {
                  "List all infrastructure services for a repository" : {
                    "value" : {
                      "data" : [ {
                        "name" : "Artifactory",
                        "url" : "https://artifactory.example.org/releases",
                        "description" : "Artifactory repository",
                        "usernameSecretRef" : "artifactoryUsername",
                        "passwordSecretRef" : "artifactoryPassword",
                        "credentialsTypes" : [ ]
                      }, {
                        "name" : "GitHub",
                        "url" : "https://github.com",
                        "description" : "GitHub server",
                        "usernameSecretRef" : "gitHubUsername",
                        "passwordSecretRef" : "gitHubPassword",
                        "credentialsTypes" : [ ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 2,
                        "sortProperties" : [ {
                          "name" : "name",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Repositories" ],
        "summary" : "Create an infrastructure service for a repository",
        "operationId" : "PostInfrastructureServiceForRepository",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateInfrastructureService"
              },
              "examples" : {
                "Create infrastructure service" : {
                  "value" : {
                    "name" : "Artifactory",
                    "url" : "https://artifactory.example.org/releases",
                    "description" : "Artifactory repository",
                    "usernameSecretRef" : "artifactoryUsername",
                    "passwordSecretRef" : "artifactoryPassword",
                    "credentialsTypes" : [ "NETRC_FILE" ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InfrastructureService"
                },
                "examples" : {
                  "Create infrastructure service" : {
                    "value" : {
                      "name" : "Artifactory",
                      "url" : "https://artifactory.example.org/releases",
                      "description" : "Artifactory repository",
                      "usernameSecretRef" : "artifactoryUsername",
                      "passwordSecretRef" : "artifactoryPassword",
                      "credentialsTypes" : [ ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}/infrastructure-services/{serviceName}" : {
      "delete" : {
        "tags" : [ "Repositories" ],
        "summary" : "Delete an infrastructure service from a repository",
        "operationId" : "DeleteInfrastructureServiceForRepositoryIdAndName",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the infrastructure service.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Repositories" ],
        "summary" : "Update an infrastructure service for a repository",
        "operationId" : "PatchInfrastructureServiceForRepositoryIdAndName",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the infrastructure service.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Set the values that should be updated. To delete a value, set it explicitly to null.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateInfrastructureService"
              },
              "examples" : {
                "Update infrastructure service" : {
                  "value" : {
                    "url" : "https://github.com",
                    "description" : "Updated description",
                    "usernameSecretRef" : "newGitHubUser",
                    "passwordSecretRef" : "newGitHubPassword",
                    "credentialsTypes" : [ "NETRC_FILE" ]
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InfrastructureService"
                },
                "examples" : {
                  "Update infrastructure service" : {
                    "value" : {
                      "name" : "GitHub",
                      "url" : "https://github.com",
                      "description" : "Updated description",
                      "usernameSecretRef" : "newGitHubUser",
                      "passwordSecretRef" : "newGitHubPassword",
                      "credentialsTypes" : [ "NETRC_FILE" ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}/roles/{role}" : {
      "put" : {
        "tags" : [ "Repositories" ],
        "summary" : "Assign a repository role to a user",
        "description" : "Assign a repository role to a user. If the user already has another role for the same repository, it will be replaced with the new one.",
        "operationId" : "PutRepositoryRoleToUser",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "role",
          "in" : "path",
          "description" : "The role to assign to the user.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/RepositoryRole"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Username"
              },
              "examples" : {
                "Add user identified by username 'abc123'." : {
                  "value" : {
                    "username" : "abc123"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "204" : {
            "description" : "Successfully added the role to the user.",
            "headers" : { }
          },
          "404" : {
            "description" : "Repository or role not found.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Repositories" ],
        "summary" : "Remove a repository role from a user",
        "operationId" : "DeleteRepositoryRoleFromUser",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "role",
          "in" : "path",
          "description" : "The role to remove from the user.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/RepositoryRole"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "The username of the user.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully removed the role from the user.",
            "headers" : { }
          },
          "404" : {
            "description" : "Repository or role not found.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}/users" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "Get all users for a repository",
        "description" : "Get all users that have access rights for a repository, including the user privileges (groups) the user has within the repository. Fields available for sorting: 'username', 'firstName', 'lastName', 'email', 'group'. NOTE: This endpoint supports only one sort field. All fields other than  the first one are ignored.",
        "operationId" : "GetUsersForRepository",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_UserWithGroups"
                },
                "examples" : {
                  "Get users for repository" : {
                    "value" : {
                      "data" : [ {
                        "user" : {
                          "username" : "jdoe",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "johndoe@example.com"
                        },
                        "groups" : [ "READERS", "WRITERS" ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "username",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Get all ORT runs",
        "operationId" : "getOrtRuns",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Defines the statuses for which runs are to be retrieved. This is a comma-separated string with the following allowed statuses: 'CREATED', 'ACTIVE', 'FINISHED', 'FAILED', 'FINISHED_WITH_ISSUES' (ignoring case). If missing, the runs for all statuses are retrieved. Add a minus as the first item to exclude runs with the specified status(es), e.g. '-,FINISHED'.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedSearchResponse_OrtRunSummary-OrtRunFilters"
                },
                "examples" : {
                  "Get ORT runs for server instance" : {
                    "value" : {
                      "data" : [ {
                        "id" : 1,
                        "index" : 2,
                        "organizationId" : 1,
                        "productId" : 1,
                        "repositoryId" : 1,
                        "revision" : "main",
                        "createdAt" : "2024-01-01T00:00:00Z",
                        "finishedAt" : "2024-01-01T00:15:00Z",
                        "jobs" : {
                          "analyzer" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:50:00Z",
                            "startedAt" : "2023-12-31T23:51:00Z",
                            "finishedAt" : "2023-12-31T23:52:00Z",
                            "status" : "FINISHED"
                          },
                          "advisor" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:52:00Z",
                            "startedAt" : "2023-12-31T23:53:00Z",
                            "finishedAt" : "2023-12-31T23:54:00Z",
                            "status" : "FINISHED"
                          },
                          "scanner" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:52:00Z",
                            "startedAt" : "2023-12-31T23:53:00Z",
                            "finishedAt" : "2023-12-31T23:54:00Z",
                            "status" : "FINISHED"
                          },
                          "evaluator" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:54:00Z",
                            "startedAt" : "2023-12-31T23:55:00Z",
                            "finishedAt" : "2023-12-31T23:56:00Z",
                            "status" : "FINISHED"
                          },
                          "reporter" : {
                            "id" : 1,
                            "createdAt" : "2023-12-31T23:56:00Z",
                            "startedAt" : "2023-12-31T23:57:00Z",
                            "finishedAt" : "2023-12-31T23:58:00Z",
                            "status" : "FINISHED"
                          }
                        },
                        "status" : "FINISHED",
                        "labels" : {
                          "label key" : "label value"
                        },
                        "resolvedJobConfigContext" : "32f955941e94d0a318e1c985903f42af924e9050"
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "createdAt",
                          "direction" : "DESCENDING"
                        } ]
                      },
                      "filters" : {
                        "status" : {
                          "operator" : "IN",
                          "value" : [ "FINISHED" ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Get details of an ORT run",
        "operationId" : "getOrtRunById",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The run's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrtRun"
                },
                "examples" : {
                  "Get ORT run" : {
                    "value" : {
                      "id" : 1,
                      "index" : 2,
                      "organizationId" : 1,
                      "productId" : 1,
                      "repositoryId" : 1,
                      "revision" : "main",
                      "createdAt" : "2024-01-01T00:00:00Z",
                      "jobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "resolvedJobConfigs" : {
                        "analyzer" : {
                          "allowDynamicVersions" : true,
                          "disabledPackageManagers" : [ "NPM", "SBT" ],
                          "enabledPackageManagers" : [ "Gradle", "Maven" ],
                          "environmentConfig" : {
                            "infrastructureServices" : [ {
                              "name" : "Artifactory",
                              "url" : "https://artifactory.example.org/repo",
                              "description" : "Our Artifactory server",
                              "usernameSecretRef" : "artifactoryUsername",
                              "passwordSecretRef" : "artifactoryPassword",
                              "credentialsTypes" : [ ]
                            } ],
                            "environmentDefinitions" : {
                              "maven" : [ {
                                "service" : "Artifactory",
                                "id" : "repo"
                              } ]
                            },
                            "environmentVariables" : [ ],
                            "strict" : true
                          },
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                          "packageCurationProviders" : [ {
                            "type" : "ClearlyDefined",
                            "id" : "ClearlyDefined",
                            "enabled" : true,
                            "options" : {
                              "serverUrl" : "https://api.clearlydefined.io",
                              "minTotalLicenseScore" : "0"
                            },
                            "secrets" : { }
                          } ],
                          "packageManagerOptions" : {
                            "Gradle" : {
                              "mustRunAfter" : [ "Maven" ],
                              "options" : {
                                "gradleVersion" : "8.1.1"
                              }
                            }
                          },
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "advisor" : {
                          "advisors" : [ "VulnerableCode" ],
                          "skipExcluded" : true,
                          "keepAliveWorker" : false
                        },
                        "scanner" : {
                          "projectScanners" : [ "SCANOSS" ],
                          "scanners" : [ "ScanCode" ],
                          "skipConcluded" : true,
                          "skipExcluded" : true,
                          "keepAliveWorker" : false,
                          "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                        },
                        "evaluator" : {
                          "packageConfigurationProviders" : [ {
                            "type" : "OrtConfig",
                            "id" : "OrtConfig",
                            "enabled" : true,
                            "options" : { },
                            "secrets" : { }
                          } ],
                          "keepAliveWorker" : false
                        },
                        "reporter" : {
                          "formats" : [ "WebApp" ],
                          "keepAliveWorker" : false
                        },
                        "notifier" : {
                          "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                          "keepAliveWorker" : false
                        },
                        "ruleSet" : "default"
                      },
                      "jobs" : {
                        "analyzer" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "allowDynamicVersions" : true,
                            "disabledPackageManagers" : [ "NPM", "SBT" ],
                            "enabledPackageManagers" : [ "Gradle", "Maven" ],
                            "environmentConfig" : {
                              "infrastructureServices" : [ {
                                "name" : "Artifactory",
                                "url" : "https://artifactory.example.org/repo",
                                "description" : "Our Artifactory server",
                                "usernameSecretRef" : "artifactoryUsername",
                                "passwordSecretRef" : "artifactoryPassword",
                                "credentialsTypes" : [ ]
                              } ],
                              "environmentDefinitions" : {
                                "maven" : [ {
                                  "service" : "Artifactory",
                                  "id" : "repo"
                                } ]
                              },
                              "environmentVariables" : [ ],
                              "strict" : true
                            },
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE",
                            "packageCurationProviders" : [ {
                              "type" : "ClearlyDefined",
                              "id" : "ClearlyDefined",
                              "enabled" : true,
                              "options" : {
                                "serverUrl" : "https://api.clearlydefined.io",
                                "minTotalLicenseScore" : "0"
                              },
                              "secrets" : { }
                            } ],
                            "packageManagerOptions" : {
                              "Gradle" : {
                                "mustRunAfter" : [ "Maven" ],
                                "options" : {
                                  "gradleVersion" : "8.1.1"
                                }
                              }
                            },
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "advisor" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "advisors" : [ "VulnerableCode" ],
                            "skipExcluded" : true,
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "scanner" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "projectScanners" : [ "SCANOSS" ],
                            "scanners" : [ "ScanCode" ],
                            "skipConcluded" : true,
                            "skipExcluded" : true,
                            "keepAliveWorker" : false,
                            "submoduleFetchStrategy" : "FULLY_RECURSIVE"
                          },
                          "status" : "CREATED"
                        },
                        "evaluator" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "packageConfigurationProviders" : [ {
                              "type" : "OrtConfig",
                              "id" : "OrtConfig",
                              "enabled" : true,
                              "options" : { },
                              "secrets" : { }
                            } ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        },
                        "reporter" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "formats" : [ "WebApp" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED",
                          "reportFilenames" : [ "AsciiDoc_disclosure_document.pdf", "AsciiDoc_vulnerability_report.pdf", "scan-report-web-app.html" ]
                        },
                        "notifier" : {
                          "id" : 1,
                          "createdAt" : "2024-01-01T00:00:00Z",
                          "configuration" : {
                            "recipientAddresses" : [ "mail@example.com", "info@example.com" ],
                            "keepAliveWorker" : false
                          },
                          "status" : "CREATED"
                        }
                      },
                      "status" : "ACTIVE",
                      "labels" : {
                        "label key" : "label value"
                      },
                      "issues" : [ ],
                      "resolvedJobConfigContext" : "32f955941e94d0a318e1c985903f42af924e9050",
                      "traceId" : "35b67724-a85a-4cc4-b2a4-60fd914634e7",
                      "userDisplayName" : {
                        "username" : "john.doe",
                        "fullName" : "John Doe"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Runs" ],
        "summary" : "Delete an ORT run",
        "description" : "This operation deletes an ORT run and all generated data, including the generated reports.",
        "operationId" : "deleteOrtRunById",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The run's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted the ORT run.",
            "headers" : { }
          },
          "404" : {
            "description" : "The ORT run does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}/logs" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Download an archive with selected logs of an ORT run",
        "operationId" : "GetLogsByRunId",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "level",
          "in" : "query",
          "description" : "The log level; can be one of 'DEBUG', 'INFO', 'WARN', 'ERROR' (ignoring case).Only logs of this level or higher are retrieved. Defaults to 'INFO' if missing.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "steps",
          "in" : "query",
          "description" : "Defines the run steps for which logs are to be retrieved. This is a comma-separated string with the following allowed steps: 'CONFIG', 'ANALYZER', 'ADVISOR', 'SCANNER', 'EVALUATOR', 'REPORTER', 'NOTIFIER' (ignoring case). If missing, the logs for all steps are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response body contains a Zip archive with the selected log files.",
            "headers" : { }
          },
          "404" : {
            "description" : "The ORT run does not exist.",
            "headers" : { }
          },
          "400" : {
            "description" : "Invalid values have been provided for the log level or steps parameters.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}/issues" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Get the issues of an ORT run",
        "operationId" : "GetIssuesByRunId",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "resolved",
          "in" : "query",
          "description" : "If true, only resolved issues are returned. If false, only unresolved issues are returned.\nIf missing, both resolved and unresolved issues are returned.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_Issue"
                },
                "examples" : {
                  "Get issues for an ORT run" : {
                    "value" : {
                      "data" : [ {
                        "timestamp" : "2024-01-01T00:00:00Z",
                        "source" : "source",
                        "message" : "An issue",
                        "severity" : "ERROR",
                        "resolutions" : [ ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "timestamp",
                          "direction" : "DESCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The ORT run does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}/vulnerabilities" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Get the vulnerabilities found in an ORT run",
        "operationId" : "GetVulnerabilitiesByRunId",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "resolved",
          "in" : "query",
          "description" : "If true, only resolved vulnerabilities are returned. If false, only unresolved vulnerabilities are\nreturned. If missing, both resolved and unresolved vulnerabilities are returned.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_VulnerabilityWithIdentifier"
                },
                "examples" : {
                  "Get vulnerabilities for an ORT run" : {
                    "value" : {
                      "data" : [ {
                        "vulnerability" : {
                          "externalId" : "CVE-2021-1234",
                          "summary" : "A vulnerability",
                          "description" : "A description",
                          "references" : [ {
                            "url" : "https://example.com",
                            "scoringSystem" : "CVSS3",
                            "severity" : "HIGH",
                            "score" : 9.8,
                            "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                          } ]
                        },
                        "identifier" : {
                          "type" : "Maven",
                          "namespace" : "org.namespace",
                          "name" : "name",
                          "version" : "1.0"
                        },
                        "rating" : "HIGH",
                        "resolutions" : [ {
                          "externalId" : "CVE-2021-1234",
                          "reason" : "INEFFECTIVE_VULNERABILITY",
                          "comment" : "A comment why the vulnerability can be resolved."
                        } ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "external_id",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The ORT run does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}/rule-violations" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Get the rule violations found in an ORT run",
        "operationId" : "GetRuleViolationsByRunId",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "resolved",
          "in" : "query",
          "description" : "If true, only resolved rule violations are returned. If false, only unresolved rule violations are\nreturned. If missing, both resolved and unresolved rule violations are returned.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_RuleViolation"
                },
                "examples" : {
                  "Get rule violations for an ORT run" : {
                    "value" : {
                      "data" : [ {
                        "rule" : "Unmapped declared license found",
                        "id" : {
                          "type" : "Maven",
                          "namespace" : "org.glassfish.jersey.media",
                          "name" : "jersey-media-jaxb",
                          "version" : "2.42"
                        },
                        "license" : "GPL-1.0-or-later",
                        "licenseSource" : "DETECTED",
                        "severity" : "ERROR",
                        "message" : "The declared license 'LPGL-2.1' could not be mapped to a valid SPDX expression.",
                        "howToFix" : "Please add a declared license mapping via a curation for package\n'SpdxDocumentFile::hal:7.70.0'.\nIf this is a false-positive or ineffective finding, it can be fixed in your \n`.ort.yml` file:\n```yaml\n---\ncurations:\n  packages:\n  - id: \\\"SpdxDocumentFile::hal:7.70.0\\\"\n    curations:\n      comment: \\\"<Describe the reason for the curation.>\\\"\n      declared_license_mapping:\n        LPGL-2.1: <Insert correct license.>\n```\nDocumentation in how to configure curations in the `.ort.yml` file can be found\n[here](https://oss-review-toolkit.org/ort/docs/configuration/ort-yml).",
                        "resolutions" : [ {
                          "message" : "The declared license '.*' could not be mapped to a valid SPDX expression.",
                          "reason" : "CANT_FIX_EXCEPTION",
                          "comment" : "A comment why the rule violation can be resolved."
                        } ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "rule",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The ORT run does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}/packages" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Get the packages found in an ORT run",
        "operationId" : "GetPackagesByRunId",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "identifier",
          "in" : "query",
          "description" : "Defines an ORT package identifier for which the packages are to be retrieved. This uses a case-insensitive substring match.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "purl",
          "in" : "query",
          "description" : "Defines a purl for which the packages are to be retrieved. This uses a case-insensitive substring match.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "processedDeclaredLicense",
          "in" : "query",
          "description" : "Defines the processed declared licenses for which packages are to be retrieved. This is a comma-separated string. Add a minus as the first item to exclude packages with the specified license expressions, e.g. '-,MIT'.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedSearchResponse_Package-PackageFilters"
                },
                "examples" : {
                  "Get packages for an ORT run" : {
                    "value" : {
                      "data" : [ {
                        "identifier" : {
                          "type" : "Maven",
                          "namespace" : "org.example",
                          "name" : "name",
                          "version" : "1.0"
                        },
                        "purl" : "pkg:maven/org.example/name@1.0",
                        "authors" : [ "author1", "author2" ],
                        "declaredLicenses" : [ "license1", "license2" ],
                        "processedDeclaredLicense" : {
                          "spdxExpression" : "Apache-2.0",
                          "mappedLicenses" : { },
                          "unmappedLicenses" : [ ]
                        },
                        "description" : "A description",
                        "homepageUrl" : "https://example.com/namespace/name",
                        "binaryArtifact" : {
                          "url" : "url",
                          "hashValue" : "hashValue",
                          "hashAlgorithm" : "hashAlgorithm"
                        },
                        "sourceArtifact" : {
                          "url" : "url",
                          "hashValue" : "hashValue",
                          "hashAlgorithm" : "hashAlgorithm"
                        },
                        "vcs" : {
                          "type" : "GIT",
                          "url" : "url",
                          "revision" : "revision",
                          "path" : "path"
                        },
                        "vcsProcessed" : {
                          "type" : "GIT",
                          "url" : "url",
                          "revision" : "revision",
                          "path" : "path"
                        },
                        "isMetadataOnly" : false,
                        "isModified" : false,
                        "shortestDependencyPaths" : [ {
                          "projectIdentifier" : {
                            "type" : "Gradle",
                            "namespace" : "",
                            "name" : "project-name",
                            "version" : "1.0"
                          },
                          "scope" : "productionRuntimeClasspath",
                          "path" : [ {
                            "type" : "Maven",
                            "namespace" : "org.example",
                            "name" : "some",
                            "version" : "1.0"
                          }, {
                            "type" : "Maven",
                            "namespace" : "org.example",
                            "name" : "other",
                            "version" : "1.0"
                          } ]
                        } ],
                        "curations" : [ {
                          "comment" : "Fix the homepage URL.",
                          "homepageUrl" : "https://example.org",
                          "declaredLicenseMapping" : { }
                        } ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "purl",
                          "direction" : "ASCENDING"
                        } ]
                      },
                      "filters" : {
                        "identifier" : {
                          "operator" : "ILIKE",
                          "value" : "Maven:org.example/name@1.0"
                        },
                        "purl" : {
                          "operator" : "ILIKE",
                          "value" : "pkg:maven/org.example/name@1.0"
                        },
                        "processedDeclaredLicense" : {
                          "operator" : "IN",
                          "value" : [ "Apache-2.0" ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The ORT run does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}/packages/licenses" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Get the licenses for packages found in an ORT run",
        "operationId" : "GetLicensesForPackagesByRunId",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Licenses"
                },
                "examples" : {
                  "Get licenses for packages" : {
                    "value" : {
                      "processedDeclaredLicenses" : [ "Apache-2.0", "MIT" ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}/reporter/{fileName}" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Download a report of an ORT run",
        "operationId" : "GetReportByRunIdAndFileName",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "description" : "The name of the report file to be downloaded.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response body contains the requested report file.",
            "headers" : {
              "Content-Type" : {
                "description" : "The content type is set to the media type derived from the report file.",
                "required" : false,
                "deprecated" : false,
                "schema" : {
                  "type" : "string",
                  "title" : "String"
                }
              }
            }
          },
          "404" : {
            "description" : "The requested report file or the ORT run could not be resolved.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}/statistics" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Get statistics about an ORT run",
        "operationId" : "getOrtRunStatistics",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrtRunStatistics"
                },
                "examples" : {
                  "Get ORT run statistics" : {
                    "value" : {
                      "issuesCount" : 10,
                      "issuesCountBySeverity" : {
                        "HINT" : 4,
                        "WARNING" : 0,
                        "ERROR" : 6
                      },
                      "packagesCount" : 200,
                      "ecosystems" : [ {
                        "name" : "Maven",
                        "count" : 55
                      }, {
                        "name" : "NPM",
                        "count" : 145
                      } ],
                      "vulnerabilitiesCount" : 3,
                      "vulnerabilitiesCountByRating" : {
                        "NONE" : 0,
                        "LOW" : 1,
                        "MEDIUM" : 0,
                        "HIGH" : 1,
                        "CRITICAL" : 1
                      },
                      "ruleViolationsCount" : 5,
                      "ruleViolationsCountBySeverity" : {
                        "HINT" : 0,
                        "WARNING" : 1,
                        "ERROR" : 4
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/runs/{runId}/projects" : {
      "get" : {
        "tags" : [ "Runs" ],
        "summary" : "Get the projects found in an ORT run",
        "operationId" : "GetProjectsByRunId",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "The ID of the ORT run.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_Project"
                },
                "examples" : {
                  "Get project for an ORT run" : {
                    "value" : {
                      "data" : [ {
                        "identifier" : {
                          "type" : "Maven",
                          "namespace" : "org.namespace",
                          "name" : "name",
                          "version" : "1.0"
                        },
                        "definitionFilePath" : "path/to/definition",
                        "authors" : [ "author1", "author2" ],
                        "declaredLicenses" : [ "license1", "license2" ],
                        "processedDeclaredLicense" : {
                          "spdxExpression" : "Expression",
                          "mappedLicenses" : { },
                          "unmappedLicenses" : [ ]
                        },
                        "vcs" : {
                          "type" : "GIT",
                          "url" : "url",
                          "revision" : "revision",
                          "path" : "path"
                        },
                        "vcsProcessed" : {
                          "type" : "GIT",
                          "url" : "url",
                          "revision" : "revision",
                          "path" : "path"
                        },
                        "description" : "A description",
                        "homepageUrl" : "https://example.com/namespace/name",
                        "scopeNames" : [ "scope1", "scope2" ]
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 1,
                        "sortProperties" : [ {
                          "name" : "purl",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The ORT run does not exist.",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}/secrets/{secretName}" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get details of a secret of an organization",
        "operationId" : "GetSecretByOrganizationIdAndName",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret's name.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                },
                "examples" : {
                  "Get Secret" : {
                    "value" : {
                      "name" : "token_npm_repo_1",
                      "description" : "Access token for NPM Repo 1"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Organizations" ],
        "summary" : "Delete a secret from an organization",
        "operationId" : "DeleteSecretByOrganizationIdAndName",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret's name.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Organizations" ],
        "summary" : "Update a secret of an organization",
        "operationId" : "PatchSecretByOrganizationIdAndName",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret's name.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Set the values that should be updated. To delete a value, set it explicitly to null.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSecret"
              },
              "examples" : {
                "Update Secret" : {
                  "value" : {
                    "value" : "0rg-s3cr3t-08_15",
                    "description" : "New access token for Maven Repo 1"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                },
                "examples" : {
                  "Update Secret" : {
                    "value" : {
                      "name" : "token_maven_repo_1",
                      "description" : "New access token for Maven Repo 1"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/organizations/{organizationId}/secrets" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get all secrets of an organization",
        "operationId" : "GetSecretsByOrganizationId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The ID of an organization.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_Secret"
                },
                "examples" : {
                  "Get all secrets of an organization" : {
                    "value" : {
                      "data" : [ {
                        "name" : "token_npm_repo_1",
                        "description" : "Access token for NPM Repo 1"
                      }, {
                        "name" : "token_maven_repo_1",
                        "description" : "Access token for Maven Repo 1"
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 2,
                        "sortProperties" : [ {
                          "name" : "name",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Organizations" ],
        "summary" : "Create a secret for an organization",
        "operationId" : "PostSecretForOrganization",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateSecret"
              },
              "examples" : {
                "Create Secret" : {
                  "value" : {
                    "name" : "token_maven_repo_1",
                    "value" : "0rg-s3cr3t-08_15",
                    "description" : "Access token for Maven Repo 1"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                },
                "examples" : {
                  "Create Secret" : {
                    "value" : {
                      "name" : "token_maven_repo_1",
                      "description" : "Access token for Maven Repo 1"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/products/{productId}/secrets/{secretName}" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get details of a secret of a product",
        "operationId" : "GetSecretByProductIdAndName",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret's name.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                },
                "examples" : {
                  "Get Secret" : {
                    "value" : {
                      "name" : "token_npm_repo_1",
                      "description" : "Access token for NPM Repo 1"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Products" ],
        "summary" : "Delete a secret from a product",
        "operationId" : "DeleteSecretByProductIdAndName",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret's name.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Products" ],
        "summary" : "Update a secret of a product",
        "operationId" : "PatchSecretByProductIdAndName",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret's name.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Set the values that should be updated. To delete a value, set it explicitly to null.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSecret"
              },
              "examples" : {
                "Update Secret" : {
                  "value" : {
                    "value" : "pr0d-s3cr3t-08_15",
                    "description" : "New access token for Maven Repo 1"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                },
                "examples" : {
                  "Update Secret" : {
                    "value" : {
                      "name" : "token_maven_repo_1",
                      "description" : "New access token for Maven Repo 1"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/products/{productId}/secrets" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get all secrets of a specific product",
        "operationId" : "GetSecretsByProductId",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The ID of a product.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_Secret"
                },
                "examples" : {
                  "List all secrets of a product" : {
                    "value" : {
                      "data" : [ {
                        "name" : "token_npm_repo_1",
                        "description" : "Access token for NPM Repo 1"
                      }, {
                        "name" : "token_maven_repo_1",
                        "description" : "Access token for Maven Repo 1"
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 2,
                        "sortProperties" : [ {
                          "name" : "name",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Products" ],
        "summary" : "Create a secret for a product",
        "operationId" : "PostSecretForProduct",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateSecret"
              },
              "examples" : {
                "Create Secret" : {
                  "value" : {
                    "name" : "token_maven_repo_1",
                    "value" : "pr0d-s3cr3t-08_15",
                    "description" : "Access token for Maven Repo 1"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                },
                "examples" : {
                  "Create Secret" : {
                    "value" : {
                      "name" : "token_maven_repo_1",
                      "description" : "Access token for Maven Repo 1"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}/secrets/{secretName}" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "Get details of a secret of a repository",
        "operationId" : "GetSecretByRepositoryIdAndName",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret's name.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                },
                "examples" : {
                  "Get Secret" : {
                    "value" : {
                      "name" : "token_npm_repo_1",
                      "description" : "Access token for NPM Repo 1"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Repositories" ],
        "summary" : "Delete a secret from a repository",
        "operationId" : "DeleteSecretByRepositoryIdAndName",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret's name.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Repositories" ],
        "summary" : "Update a secret of a repository",
        "operationId" : "PatchSecretByRepositoryIdAndName",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret's name.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Set the values that should be updated. To delete a value, set it explicitly to null.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSecret"
              },
              "examples" : {
                "Update Secret" : {
                  "value" : {
                    "value" : "r3p0-s3cr3t-08_15",
                    "description" : "New access token for Maven Repo 1"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                },
                "examples" : {
                  "Update Secret" : {
                    "value" : {
                      "name" : "token_maven_repo_1",
                      "description" : "New access token for Maven Repo 1"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/repositories/{repositoryId}/secrets" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "Get all secrets of a repository",
        "operationId" : "GetSecretsByRepositoryId",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The ID of a repository.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to retrieve. If not specified at most 20 items are retrieved.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset of the first item in the result. Together with 'limit', this can be used to implement paging.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Comma-separated list of fields by which the result is sorted. The listed fields must be supported by the endpoint. Putting a minus ('-') before a field name, reverts the sort order for this field. If not specified, a default sort field and sort order is used.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedResponse_Secret"
                },
                "examples" : {
                  "Get all secrets of a repository" : {
                    "value" : {
                      "data" : [ {
                        "name" : "token_npm_repo_1",
                        "description" : "Access token for NPM Repo 1"
                      }, {
                        "name" : "token_maven_repo_1",
                        "description" : "Access token for Maven Repo 1"
                      } ],
                      "pagination" : {
                        "limit" : 20,
                        "offset" : 0,
                        "totalCount" : 2,
                        "sortProperties" : [ {
                          "name" : "name",
                          "direction" : "ASCENDING"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Repositories" ],
        "summary" : "Create a secret for a repository",
        "operationId" : "PostSecretForRepository",
        "parameters" : [ {
          "name" : "repositoryId",
          "in" : "path",
          "description" : "The repository's ID.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateSecret"
              },
              "examples" : {
                "Create Secret" : {
                  "value" : {
                    "name" : "token_maven_repo_1",
                    "value" : "r3p0-s3cr3t-08_15",
                    "description" : "Access token for Maven Repo 1"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                },
                "examples" : {
                  "Create Secret" : {
                    "value" : {
                      "name" : "token_maven_repo_1",
                      "description" : "Access token for Maven Repo 1"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/v1/versions" : {
      "get" : {
        "tags" : [ "Versions" ],
        "summary" : "Get the versions of the ORT server and other components",
        "operationId" : "getVersions",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string",
                    "title" : "String"
                  },
                  "title" : "Map_String-String"
                },
                "examples" : {
                  "Versions" : {
                    "value" : {
                      "ORT Server" : "1.0.0",
                      "ORT Core" : "25.1.0"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid Token",
            "headers" : { }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "token" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "OidcConfig" : {
        "type" : "object",
        "properties" : {
          "accessTokenUrl" : {
            "type" : "string",
            "title" : "String"
          },
          "clientId" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "accessTokenUrl", "clientId" ],
        "title" : "OidcConfig"
      },
      "Liveness" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "message" ],
        "title" : "Liveness"
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "firstName" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "lastName" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "username" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "username" ],
        "title" : "User"
      },
      "CreateUser" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "firstName" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "lastName" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "password" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "temporary" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "username" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "username" ],
        "title" : "CreateUser"
      },
      "ContentManagementSection" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "title" : "String"
          },
          "isEnabled" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "markdown" : {
            "type" : "string",
            "title" : "String"
          },
          "updatedAt" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "id", "isEnabled", "markdown", "updatedAt" ],
        "title" : "ContentManagementSection"
      },
      "UpdateContentManagementSection" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "markdown" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "isEnabled", "markdown" ],
        "title" : "UpdateContentManagementSection"
      },
      "ConfigKey" : {
        "type" : "string",
        "enum" : [ "HOME_ICON_URL", "MAIN_PRODUCT_NAME" ],
        "title" : "ConfigKey"
      },
      "Config" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "value" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "required" : [ "isEnabled" ],
        "title" : "Config"
      },
      "Organization" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "id", "name" ],
        "title" : "Organization"
      },
      "PagingData" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "sortProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortProperty"
            },
            "title" : "List_SortProperty"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "limit", "offset", "sortProperties", "totalCount" ],
        "title" : "PagingData"
      },
      "SortProperty" : {
        "type" : "object",
        "properties" : {
          "direction" : {
            "$ref" : "#/components/schemas/SortDirection"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "direction", "name" ],
        "title" : "SortProperty"
      },
      "SortDirection" : {
        "type" : "string",
        "enum" : [ "ASCENDING", "DESCENDING" ],
        "title" : "SortDirection"
      },
      "PagedResponse_Organization" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Organization"
            },
            "title" : "List_Organization"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_Organization"
      },
      "CreateOrganization" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "name" ],
        "title" : "CreateOrganization"
      },
      "UpdateOrganization" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "title" : "UpdateOrganization"
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "id", "name", "organizationId" ],
        "title" : "Product"
      },
      "PagedResponse_Product" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            },
            "title" : "List_Product"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_Product"
      },
      "CreateProduct" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "name" ],
        "title" : "CreateProduct"
      },
      "InfrastructureService" : {
        "type" : "object",
        "properties" : {
          "credentialsTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CredentialsType"
            },
            "title" : "Set_CredentialsType",
            "uniqueItems" : true
          },
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "passwordSecretRef" : {
            "type" : "string",
            "title" : "String"
          },
          "url" : {
            "type" : "string",
            "title" : "String"
          },
          "usernameSecretRef" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "name", "passwordSecretRef", "url", "usernameSecretRef" ],
        "title" : "InfrastructureService"
      },
      "CredentialsType" : {
        "type" : "string",
        "enum" : [ "NETRC_FILE", "GIT_CREDENTIALS_FILE", "NO_AUTHENTICATION" ],
        "title" : "CredentialsType"
      },
      "PagedResponse_InfrastructureService" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InfrastructureService"
            },
            "title" : "List_InfrastructureService"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_InfrastructureService"
      },
      "CreateInfrastructureService" : {
        "type" : "object",
        "properties" : {
          "credentialsTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CredentialsType"
            },
            "title" : "Set_CredentialsType",
            "uniqueItems" : true
          },
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "passwordSecretRef" : {
            "type" : "string",
            "title" : "String"
          },
          "url" : {
            "type" : "string",
            "title" : "String"
          },
          "usernameSecretRef" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "name", "passwordSecretRef", "url", "usernameSecretRef" ],
        "title" : "CreateInfrastructureService"
      },
      "UpdateInfrastructureService" : {
        "type" : "object",
        "properties" : {
          "credentialsTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CredentialsType"
            },
            "title" : "Set_CredentialsType",
            "uniqueItems" : true
          },
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "passwordSecretRef" : {
            "type" : "string",
            "title" : "String"
          },
          "url" : {
            "type" : "string",
            "title" : "String"
          },
          "usernameSecretRef" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "title" : "UpdateInfrastructureService"
      },
      "OrganizationRole" : {
        "type" : "string",
        "enum" : [ "READER", "WRITER", "ADMIN" ],
        "title" : "OrganizationRole"
      },
      "Username" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "username" ],
        "title" : "Username"
      },
      "OrganizationVulnerability" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "$ref" : "#/components/schemas/Identifier"
          },
          "ortRunIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64",
              "title" : "Long"
            },
            "title" : "List_Long"
          },
          "rating" : {
            "$ref" : "#/components/schemas/VulnerabilityRating"
          },
          "repositoriesCount" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "vulnerability" : {
            "$ref" : "#/components/schemas/Vulnerability"
          }
        },
        "required" : [ "identifier", "ortRunIds", "rating", "repositoriesCount", "vulnerability" ],
        "title" : "OrganizationVulnerability"
      },
      "Identifier" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "namespace" : {
            "type" : "string",
            "title" : "String"
          },
          "type" : {
            "type" : "string",
            "title" : "String"
          },
          "version" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "name", "namespace", "type", "version" ],
        "title" : "Identifier"
      },
      "VulnerabilityRating" : {
        "type" : "string",
        "enum" : [ "NONE", "LOW", "MEDIUM", "HIGH", "CRITICAL" ],
        "title" : "VulnerabilityRating"
      },
      "Vulnerability" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "externalId" : {
            "type" : "string",
            "title" : "String"
          },
          "references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VulnerabilityReference"
            },
            "title" : "List_VulnerabilityReference"
          },
          "summary" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "required" : [ "externalId", "references" ],
        "title" : "Vulnerability"
      },
      "VulnerabilityReference" : {
        "type" : "object",
        "properties" : {
          "score" : {
            "type" : [ "null", "number" ],
            "format" : "float",
            "title" : "Float"
          },
          "scoringSystem" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "severity" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "url" : {
            "type" : "string",
            "title" : "String"
          },
          "vector" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "required" : [ "url" ],
        "title" : "VulnerabilityReference"
      },
      "PagedResponse_OrganizationVulnerability" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationVulnerability"
            },
            "title" : "List_OrganizationVulnerability"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_OrganizationVulnerability"
      },
      "EcosystemStats" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "count", "name" ],
        "title" : "EcosystemStats"
      },
      "OrtRunStatistics" : {
        "type" : "object",
        "properties" : {
          "ecosystems" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/EcosystemStats"
            },
            "title" : "List_EcosystemStats"
          },
          "issuesCount" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          },
          "issuesCountBySeverity" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "title" : "Long"
            },
            "title" : "Map_Severity-Long"
          },
          "packagesCount" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          },
          "ruleViolationsCount" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          },
          "ruleViolationsCountBySeverity" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "title" : "Long"
            },
            "title" : "Map_Severity-Long"
          },
          "vulnerabilitiesCount" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          },
          "vulnerabilitiesCountByRating" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "title" : "Long"
            },
            "title" : "Map_VulnerabilityRating-Long"
          }
        },
        "title" : "OrtRunStatistics"
      },
      "UserWithGroups" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserGroup"
            },
            "title" : "List_UserGroup"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "required" : [ "groups", "user" ],
        "title" : "UserWithGroups"
      },
      "UserGroup" : {
        "type" : "string",
        "enum" : [ "READERS", "WRITERS", "ADMINS" ],
        "title" : "UserGroup"
      },
      "PagedResponse_UserWithGroups" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserWithGroups"
            },
            "title" : "List_UserWithGroups"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_UserWithGroups"
      },
      "PluginOptionTemplate" : {
        "type" : "object",
        "properties" : {
          "isFinal" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "option" : {
            "type" : "string",
            "title" : "String"
          },
          "type" : {
            "$ref" : "#/components/schemas/PluginOptionType"
          },
          "value" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "required" : [ "isFinal", "option", "type" ],
        "title" : "PluginOptionTemplate"
      },
      "PluginOptionType" : {
        "type" : "string",
        "enum" : [ "BOOLEAN", "INTEGER", "LONG", "SECRET", "STRING", "STRING_LIST" ],
        "title" : "PluginOptionType"
      },
      "PluginDescriptor" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "title" : "String"
          },
          "displayName" : {
            "type" : "string",
            "title" : "String"
          },
          "enabled" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "id" : {
            "type" : "string",
            "title" : "String"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PluginOption"
            },
            "title" : "List_PluginOption"
          },
          "type" : {
            "$ref" : "#/components/schemas/PluginType"
          }
        },
        "required" : [ "description", "displayName", "enabled", "id", "type" ],
        "title" : "PluginDescriptor"
      },
      "PluginOption" : {
        "type" : "object",
        "properties" : {
          "defaultValue" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "description" : {
            "type" : "string",
            "title" : "String"
          },
          "isNullable" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "isRequired" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "type" : {
            "$ref" : "#/components/schemas/PluginOptionType"
          }
        },
        "required" : [ "description", "isNullable", "isRequired", "name", "type" ],
        "title" : "PluginOption"
      },
      "PluginType" : {
        "type" : "string",
        "enum" : [ "ADVISOR", "PACKAGE_CONFIGURATION_PROVIDER", "PACKAGE_CURATION_PROVIDER", "PACKAGE_MANAGER", "REPORTER", "SCANNER" ],
        "title" : "PluginType"
      },
      "PreconfiguredPluginDescriptor" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "title" : "String"
          },
          "displayName" : {
            "type" : "string",
            "title" : "String"
          },
          "id" : {
            "type" : "string",
            "title" : "String"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreconfiguredPluginOption"
            },
            "title" : "List_PreconfiguredPluginOption"
          },
          "type" : {
            "$ref" : "#/components/schemas/PluginType"
          }
        },
        "required" : [ "description", "displayName", "id", "options", "type" ],
        "title" : "PreconfiguredPluginDescriptor"
      },
      "PreconfiguredPluginOption" : {
        "type" : "object",
        "properties" : {
          "defaultValue" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "description" : {
            "type" : "string",
            "title" : "String"
          },
          "isFixed" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "isNullable" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "isRequired" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "type" : {
            "$ref" : "#/components/schemas/PluginOptionType"
          }
        },
        "required" : [ "description", "isFixed", "isNullable", "isRequired", "name", "type" ],
        "title" : "PreconfiguredPluginOption"
      },
      "PluginTemplate" : {
        "type" : "object",
        "properties" : {
          "isGlobal" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PluginOptionTemplate"
            },
            "title" : "List_PluginOptionTemplate"
          },
          "organizationIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64",
              "title" : "Long"
            },
            "title" : "List_Long"
          },
          "pluginId" : {
            "type" : "string",
            "title" : "String"
          },
          "pluginType" : {
            "$ref" : "#/components/schemas/PluginType"
          }
        },
        "required" : [ "isGlobal", "name", "options", "pluginId", "pluginType" ],
        "title" : "PluginTemplate"
      },
      "UpdateProduct" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "title" : "UpdateProduct"
      },
      "Repository" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "productId" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "type" : {
            "$ref" : "#/components/schemas/RepositoryType"
          },
          "url" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "id", "organizationId", "productId", "type", "url" ],
        "title" : "Repository"
      },
      "RepositoryType" : {
        "type" : "string",
        "enum" : [ "GIT", "GIT_REPO", "MERCURIAL", "SUBVERSION" ],
        "title" : "RepositoryType"
      },
      "PagedResponse_Repository" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Repository"
            },
            "title" : "List_Repository"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_Repository"
      },
      "CreateRepository" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "type" : {
            "$ref" : "#/components/schemas/RepositoryType"
          },
          "url" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "type", "url" ],
        "title" : "CreateRepository"
      },
      "ProductRole" : {
        "type" : "string",
        "enum" : [ "READER", "WRITER", "ADMIN" ],
        "title" : "ProductRole"
      },
      "ProductVulnerability" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "$ref" : "#/components/schemas/Identifier"
          },
          "ortRunIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64",
              "title" : "Long"
            },
            "title" : "List_Long"
          },
          "rating" : {
            "$ref" : "#/components/schemas/VulnerabilityRating"
          },
          "repositoriesCount" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "vulnerability" : {
            "$ref" : "#/components/schemas/Vulnerability"
          }
        },
        "required" : [ "identifier", "ortRunIds", "rating", "repositoriesCount", "vulnerability" ],
        "title" : "ProductVulnerability"
      },
      "PagedResponse_ProductVulnerability" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductVulnerability"
            },
            "title" : "List_ProductVulnerability"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_ProductVulnerability"
      },
      "JobConfigurations" : {
        "type" : "object",
        "properties" : {
          "advisor" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/AdvisorJobConfiguration"
            } ]
          },
          "analyzer" : {
            "$ref" : "#/components/schemas/AnalyzerJobConfiguration"
          },
          "evaluator" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/EvaluatorJobConfiguration"
            } ]
          },
          "notifier" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/NotifierJobConfiguration"
            } ]
          },
          "parameters" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          },
          "reporter" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ReporterJobConfiguration"
            } ]
          },
          "ruleSet" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "scanner" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ScannerJobConfiguration"
            } ]
          }
        },
        "title" : "JobConfigurations"
      },
      "AdvisorJobConfiguration" : {
        "type" : "object",
        "properties" : {
          "advisors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          },
          "config" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PluginConfig"
            },
            "title" : "Map_String-PluginConfig"
          },
          "keepAliveWorker" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "skipExcluded" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        },
        "title" : "AdvisorJobConfiguration"
      },
      "PluginConfig" : {
        "type" : "object",
        "properties" : {
          "options" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          },
          "secrets" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          }
        },
        "required" : [ "options", "secrets" ],
        "title" : "PluginConfig"
      },
      "AnalyzerJobConfiguration" : {
        "type" : "object",
        "properties" : {
          "allowDynamicVersions" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "disabledPackageManagers" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          },
          "enabledPackageManagers" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          },
          "environmentConfig" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/EnvironmentConfig"
            } ]
          },
          "keepAliveWorker" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "packageCurationProviders" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ProviderPluginConfiguration"
            },
            "title" : "List_ProviderPluginConfiguration"
          },
          "packageManagerOptions" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PackageManagerConfiguration"
            },
            "title" : "Map_String-PackageManagerConfiguration"
          },
          "repositoryConfigPath" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "skipExcluded" : {
            "type" : [ "null", "boolean" ],
            "title" : "Boolean"
          },
          "submoduleFetchStrategy" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/SubmoduleFetchStrategy"
            } ]
          }
        },
        "title" : "AnalyzerJobConfiguration"
      },
      "EnvironmentConfig" : {
        "type" : "object",
        "properties" : {
          "environmentDefinitions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string",
                  "title" : "String"
                },
                "title" : "Map_String-String"
              },
              "title" : "List_Map_String-String"
            },
            "title" : "Map_String-List_Map_String-String"
          },
          "environmentVariables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvironmentVariableDeclaration"
            },
            "title" : "List_EnvironmentVariableDeclaration"
          },
          "infrastructureServices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InfrastructureService"
            },
            "title" : "List_InfrastructureService"
          },
          "strict" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        },
        "required" : [ "infrastructureServices" ],
        "title" : "EnvironmentConfig"
      },
      "EnvironmentVariableDeclaration" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "secretName" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "value" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "required" : [ "name" ],
        "title" : "EnvironmentVariableDeclaration"
      },
      "ProviderPluginConfiguration" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "id" : {
            "type" : "string",
            "title" : "String"
          },
          "options" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          },
          "secrets" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          },
          "type" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "type" ],
        "title" : "ProviderPluginConfiguration"
      },
      "PackageManagerConfiguration" : {
        "type" : "object",
        "properties" : {
          "mustRunAfter" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          },
          "options" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          }
        },
        "title" : "PackageManagerConfiguration"
      },
      "SubmoduleFetchStrategy" : {
        "type" : "string",
        "enum" : [ "DISABLED", "TOP_LEVEL_ONLY", "FULLY_RECURSIVE" ],
        "title" : "SubmoduleFetchStrategy"
      },
      "EvaluatorJobConfiguration" : {
        "type" : "object",
        "properties" : {
          "keepAliveWorker" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "packageConfigurationProviders" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ProviderPluginConfiguration"
            },
            "title" : "List_ProviderPluginConfiguration"
          }
        },
        "title" : "EvaluatorJobConfiguration"
      },
      "NotifierJobConfiguration" : {
        "type" : "object",
        "properties" : {
          "keepAliveWorker" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "recipientAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          }
        },
        "title" : "NotifierJobConfiguration"
      },
      "ReporterJobConfiguration" : {
        "type" : "object",
        "properties" : {
          "assetDirectories" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ReporterAsset"
            },
            "title" : "List_ReporterAsset"
          },
          "assetFiles" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ReporterAsset"
            },
            "title" : "List_ReporterAsset"
          },
          "config" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PluginConfig"
            },
            "title" : "Map_String-PluginConfig"
          },
          "copyrightGarbageFile" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "customLicenseTextDir" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "formats" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          },
          "howToFixTextProviderFile" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "keepAliveWorker" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "licenseClassificationsFile" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "nameMappings" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ReportNameMapping"
            },
            "title" : "Map_String-ReportNameMapping"
          },
          "packageConfigurationProviders" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ProviderPluginConfiguration"
            },
            "title" : "List_ProviderPluginConfiguration"
          },
          "resolutionsFile" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "title" : "ReporterJobConfiguration"
      },
      "ReporterAsset" : {
        "type" : "object",
        "properties" : {
          "sourcePath" : {
            "type" : "string",
            "title" : "String"
          },
          "targetFolder" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "targetName" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "required" : [ "sourcePath" ],
        "title" : "ReporterAsset"
      },
      "ReportNameMapping" : {
        "type" : "object",
        "properties" : {
          "namePrefix" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "namePrefix" ],
        "title" : "ReportNameMapping"
      },
      "ScannerJobConfiguration" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PluginConfig"
            },
            "title" : "Map_String-PluginConfig"
          },
          "keepAliveWorker" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "projectScanners" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          },
          "scanners" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          },
          "skipConcluded" : {
            "type" : [ "null", "boolean" ],
            "title" : "Boolean"
          },
          "skipExcluded" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "submoduleFetchStrategy" : {
            "$ref" : "#/components/schemas/SubmoduleFetchStrategy"
          }
        },
        "title" : "ScannerJobConfiguration"
      },
      "CreateOrtRun" : {
        "type" : "object",
        "properties" : {
          "environmentConfigPath" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "jobConfigContext" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "jobConfigs" : {
            "$ref" : "#/components/schemas/JobConfigurations"
          },
          "labels" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          },
          "path" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "repositoryFailedIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64",
              "title" : "Long"
            },
            "title" : "List_Long"
          },
          "repositoryIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64",
              "title" : "Long"
            },
            "title" : "List_Long"
          },
          "revision" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "jobConfigs", "revision" ],
        "title" : "CreateOrtRun"
      },
      "OrtRun" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "title" : "String"
          },
          "environmentConfigPath" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "finishedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "index" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "issues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            },
            "title" : "List_Issue"
          },
          "jobConfigContext" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "jobConfigs" : {
            "$ref" : "#/components/schemas/JobConfigurations"
          },
          "jobs" : {
            "$ref" : "#/components/schemas/Jobs"
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "path" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "productId" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "repositoryId" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "resolvedJobConfigContext" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "resolvedJobConfigs" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/JobConfigurations"
            } ]
          },
          "resolvedRevision" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "revision" : {
            "type" : "string",
            "title" : "String"
          },
          "status" : {
            "$ref" : "#/components/schemas/OrtRunStatus"
          },
          "traceId" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "userDisplayName" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/UserDisplayName"
            } ]
          }
        },
        "required" : [ "createdAt", "id", "index", "issues", "jobConfigs", "jobs", "labels", "organizationId", "productId", "repositoryId", "revision", "status" ],
        "title" : "OrtRun"
      },
      "Issue" : {
        "type" : "object",
        "properties" : {
          "affectedPath" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "identifier" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/Identifier"
            } ]
          },
          "message" : {
            "type" : "string",
            "title" : "String"
          },
          "resolutions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IssueResolution"
            },
            "title" : "List_IssueResolution"
          },
          "severity" : {
            "$ref" : "#/components/schemas/Severity"
          },
          "source" : {
            "type" : "string",
            "title" : "String"
          },
          "timestamp" : {
            "type" : "string",
            "title" : "String"
          },
          "worker" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "required" : [ "message", "severity", "source", "timestamp" ],
        "title" : "Issue"
      },
      "IssueResolution" : {
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string",
            "title" : "String"
          },
          "message" : {
            "type" : "string",
            "title" : "String"
          },
          "reason" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "comment", "message", "reason" ],
        "title" : "IssueResolution"
      },
      "Severity" : {
        "type" : "string",
        "enum" : [ "HINT", "WARNING", "ERROR" ],
        "title" : "Severity"
      },
      "Jobs" : {
        "type" : "object",
        "properties" : {
          "advisor" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/AdvisorJob"
            } ]
          },
          "analyzer" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/AnalyzerJob"
            } ]
          },
          "evaluator" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/EvaluatorJob"
            } ]
          },
          "notifier" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/NotifierJob"
            } ]
          },
          "reporter" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ReporterJob"
            } ]
          },
          "scanner" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ScannerJob"
            } ]
          }
        },
        "title" : "Jobs"
      },
      "AdvisorJob" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "$ref" : "#/components/schemas/AdvisorJobConfiguration"
          },
          "createdAt" : {
            "type" : "string",
            "title" : "String"
          },
          "finishedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "startedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStatus"
          }
        },
        "required" : [ "configuration", "createdAt", "id", "status" ],
        "title" : "AdvisorJob"
      },
      "JobStatus" : {
        "type" : "string",
        "enum" : [ "CREATED", "SCHEDULED", "RUNNING", "FAILED", "FINISHED", "FINISHED_WITH_ISSUES" ],
        "title" : "JobStatus"
      },
      "AnalyzerJob" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "$ref" : "#/components/schemas/AnalyzerJobConfiguration"
          },
          "createdAt" : {
            "type" : "string",
            "title" : "String"
          },
          "finishedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "startedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStatus"
          }
        },
        "required" : [ "configuration", "createdAt", "id", "status" ],
        "title" : "AnalyzerJob"
      },
      "EvaluatorJob" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "$ref" : "#/components/schemas/EvaluatorJobConfiguration"
          },
          "createdAt" : {
            "type" : "string",
            "title" : "String"
          },
          "finishedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "startedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStatus"
          }
        },
        "required" : [ "configuration", "createdAt", "id", "status" ],
        "title" : "EvaluatorJob"
      },
      "NotifierJob" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "$ref" : "#/components/schemas/NotifierJobConfiguration"
          },
          "createdAt" : {
            "type" : "string",
            "title" : "String"
          },
          "finishedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "startedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStatus"
          }
        },
        "required" : [ "configuration", "createdAt", "id", "status" ],
        "title" : "NotifierJob"
      },
      "ReporterJob" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "$ref" : "#/components/schemas/ReporterJobConfiguration"
          },
          "createdAt" : {
            "type" : "string",
            "title" : "String"
          },
          "finishedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "reportFilenames" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          },
          "startedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStatus"
          }
        },
        "required" : [ "configuration", "createdAt", "id", "status" ],
        "title" : "ReporterJob"
      },
      "ScannerJob" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "$ref" : "#/components/schemas/ScannerJobConfiguration"
          },
          "createdAt" : {
            "type" : "string",
            "title" : "String"
          },
          "finishedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "startedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStatus"
          }
        },
        "required" : [ "configuration", "createdAt", "id", "status" ],
        "title" : "ScannerJob"
      },
      "OrtRunStatus" : {
        "type" : "string",
        "enum" : [ "CREATED", "ACTIVE", "FINISHED", "FAILED", "FINISHED_WITH_ISSUES" ],
        "title" : "OrtRunStatus"
      },
      "UserDisplayName" : {
        "type" : "object",
        "properties" : {
          "fullName" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "username" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "username" ],
        "title" : "UserDisplayName"
      },
      "UpdateRepository" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "type" : {
            "$ref" : "#/components/schemas/RepositoryType"
          },
          "url" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "title" : "UpdateRepository"
      },
      "OrtRunSummary" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "title" : "String"
          },
          "environmentConfigPath" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "finishedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "index" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "jobConfigContext" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "jobs" : {
            "$ref" : "#/components/schemas/JobSummaries"
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "path" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "productId" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "repositoryId" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "resolvedJobConfigContext" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "resolvedRevision" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "revision" : {
            "type" : "string",
            "title" : "String"
          },
          "status" : {
            "$ref" : "#/components/schemas/OrtRunStatus"
          },
          "userDisplayName" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/UserDisplayName"
            } ]
          }
        },
        "required" : [ "createdAt", "id", "index", "jobs", "labels", "organizationId", "productId", "repositoryId", "revision", "status" ],
        "title" : "OrtRunSummary"
      },
      "JobSummaries" : {
        "type" : "object",
        "properties" : {
          "advisor" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/JobSummary"
            } ]
          },
          "analyzer" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/JobSummary"
            } ]
          },
          "evaluator" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/JobSummary"
            } ]
          },
          "reporter" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/JobSummary"
            } ]
          },
          "scanner" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/JobSummary"
            } ]
          }
        },
        "title" : "JobSummaries"
      },
      "JobSummary" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "title" : "String"
          },
          "finishedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "startedAt" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStatus"
          }
        },
        "required" : [ "createdAt", "id", "status" ],
        "title" : "JobSummary"
      },
      "PagedResponse_OrtRunSummary" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrtRunSummary"
            },
            "title" : "List_OrtRunSummary"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_OrtRunSummary"
      },
      "RepositoryRole" : {
        "type" : "string",
        "enum" : [ "READER", "WRITER", "ADMIN" ],
        "title" : "RepositoryRole"
      },
      "OrtRunFilters" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/FilterOperatorAndValue_Set_OrtRunStatus"
            } ]
          }
        },
        "title" : "OrtRunFilters"
      },
      "FilterOperatorAndValue_Set_OrtRunStatus" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "$ref" : "#/components/schemas/ComparisonOperator"
          },
          "value" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrtRunStatus"
            },
            "title" : "Set_OrtRunStatus",
            "uniqueItems" : true
          }
        },
        "required" : [ "operator", "value" ],
        "title" : "FilterOperatorAndValue_Set_OrtRunStatus"
      },
      "ComparisonOperator" : {
        "type" : "string",
        "enum" : [ "EQUALS", "NOT_EQUALS", "IN", "NOT_IN", "ILIKE", "GREATER_THAN", "LESS_THAN", "GREATER_OR_EQUAL", "LESS_OR_EQUAL" ],
        "title" : "ComparisonOperator"
      },
      "PagedSearchResponse_OrtRunSummary-OrtRunFilters" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrtRunSummary"
            },
            "title" : "List_OrtRunSummary"
          },
          "filters" : {
            "$ref" : "#/components/schemas/OrtRunFilters"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "filters", "pagination" ],
        "title" : "PagedSearchResponse_OrtRunSummary-OrtRunFilters"
      },
      "PagedResponse_Issue" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            },
            "title" : "List_Issue"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_Issue"
      },
      "VulnerabilityWithIdentifier" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "$ref" : "#/components/schemas/Identifier"
          },
          "rating" : {
            "$ref" : "#/components/schemas/VulnerabilityRating"
          },
          "resolutions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VulnerabilityResolution"
            },
            "title" : "List_VulnerabilityResolution"
          },
          "vulnerability" : {
            "$ref" : "#/components/schemas/Vulnerability"
          }
        },
        "required" : [ "identifier", "rating", "vulnerability" ],
        "title" : "VulnerabilityWithIdentifier"
      },
      "VulnerabilityResolution" : {
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string",
            "title" : "String"
          },
          "externalId" : {
            "type" : "string",
            "title" : "String"
          },
          "reason" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "comment", "externalId", "reason" ],
        "title" : "VulnerabilityResolution"
      },
      "PagedResponse_VulnerabilityWithIdentifier" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VulnerabilityWithIdentifier"
            },
            "title" : "List_VulnerabilityWithIdentifier"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_VulnerabilityWithIdentifier"
      },
      "RuleViolation" : {
        "type" : "object",
        "properties" : {
          "howToFix" : {
            "type" : "string",
            "title" : "String"
          },
          "id" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/Identifier"
            } ]
          },
          "license" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "licenseSource" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "message" : {
            "type" : "string",
            "title" : "String"
          },
          "resolutions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleViolationResolution"
            },
            "title" : "List_RuleViolationResolution"
          },
          "rule" : {
            "type" : "string",
            "title" : "String"
          },
          "severity" : {
            "$ref" : "#/components/schemas/Severity"
          }
        },
        "required" : [ "howToFix", "message", "rule", "severity" ],
        "title" : "RuleViolation"
      },
      "RuleViolationResolution" : {
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string",
            "title" : "String"
          },
          "message" : {
            "type" : "string",
            "title" : "String"
          },
          "reason" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "comment", "message", "reason" ],
        "title" : "RuleViolationResolution"
      },
      "PagedResponse_RuleViolation" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleViolation"
            },
            "title" : "List_RuleViolation"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_RuleViolation"
      },
      "Package" : {
        "type" : "object",
        "properties" : {
          "authors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Set_String",
            "uniqueItems" : true
          },
          "binaryArtifact" : {
            "$ref" : "#/components/schemas/RemoteArtifact"
          },
          "cpe" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "curations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PackageCurationData"
            },
            "title" : "List_PackageCurationData"
          },
          "declaredLicenses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Set_String",
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "title" : "String"
          },
          "homepageUrl" : {
            "type" : "string",
            "title" : "String"
          },
          "identifier" : {
            "$ref" : "#/components/schemas/Identifier"
          },
          "isMetadataOnly" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "isModified" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "processedDeclaredLicense" : {
            "$ref" : "#/components/schemas/ProcessedDeclaredLicense"
          },
          "purl" : {
            "type" : "string",
            "title" : "String"
          },
          "shortestDependencyPaths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ShortestDependencyPath"
            },
            "title" : "List_ShortestDependencyPath"
          },
          "sourceArtifact" : {
            "$ref" : "#/components/schemas/RemoteArtifact"
          },
          "vcs" : {
            "$ref" : "#/components/schemas/VcsInfo"
          },
          "vcsProcessed" : {
            "$ref" : "#/components/schemas/VcsInfo"
          }
        },
        "required" : [ "authors", "binaryArtifact", "curations", "declaredLicenses", "description", "homepageUrl", "identifier", "processedDeclaredLicense", "purl", "shortestDependencyPaths", "sourceArtifact", "vcs", "vcsProcessed" ],
        "title" : "Package"
      },
      "RemoteArtifact" : {
        "type" : "object",
        "properties" : {
          "hashAlgorithm" : {
            "type" : "string",
            "title" : "String"
          },
          "hashValue" : {
            "type" : "string",
            "title" : "String"
          },
          "url" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "hashAlgorithm", "hashValue", "url" ],
        "title" : "RemoteArtifact"
      },
      "PackageCurationData" : {
        "type" : "object",
        "properties" : {
          "authors" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Set_String",
            "uniqueItems" : true
          },
          "binaryArtifact" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/RemoteArtifact"
            } ]
          },
          "comment" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "concludedLicense" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "cpe" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "declaredLicenseMapping" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          },
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "homepageUrl" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "isMetadataOnly" : {
            "type" : [ "null", "boolean" ],
            "title" : "Boolean"
          },
          "isModified" : {
            "type" : [ "null", "boolean" ],
            "title" : "Boolean"
          },
          "purl" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "sourceArtifact" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/RemoteArtifact"
            } ]
          },
          "vcs" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/VcsInfoCurationData"
            } ]
          }
        },
        "required" : [ "declaredLicenseMapping" ],
        "title" : "PackageCurationData"
      },
      "VcsInfoCurationData" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "revision" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "type" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/RepositoryType"
            } ]
          },
          "url" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "title" : "VcsInfoCurationData"
      },
      "ProcessedDeclaredLicense" : {
        "type" : "object",
        "properties" : {
          "mappedLicenses" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Map_String-String"
          },
          "spdxExpression" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "unmappedLicenses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Set_String",
            "uniqueItems" : true
          }
        },
        "required" : [ "mappedLicenses", "unmappedLicenses" ],
        "title" : "ProcessedDeclaredLicense"
      },
      "ShortestDependencyPath" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Identifier"
            },
            "title" : "List_Identifier"
          },
          "projectIdentifier" : {
            "$ref" : "#/components/schemas/Identifier"
          },
          "scope" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "path", "projectIdentifier", "scope" ],
        "title" : "ShortestDependencyPath"
      },
      "VcsInfo" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "title" : "String"
          },
          "revision" : {
            "type" : "string",
            "title" : "String"
          },
          "type" : {
            "type" : "string",
            "title" : "String"
          },
          "url" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "path", "revision", "type", "url" ],
        "title" : "VcsInfo"
      },
      "PackageFilters" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/FilterOperatorAndValue_String"
            } ]
          },
          "processedDeclaredLicense" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/FilterOperatorAndValue_Set_String"
            } ]
          },
          "purl" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/FilterOperatorAndValue_String"
            } ]
          }
        },
        "title" : "PackageFilters"
      },
      "FilterOperatorAndValue_String" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "$ref" : "#/components/schemas/ComparisonOperator"
          },
          "value" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "operator", "value" ],
        "title" : "FilterOperatorAndValue_String"
      },
      "FilterOperatorAndValue_Set_String" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "$ref" : "#/components/schemas/ComparisonOperator"
          },
          "value" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Set_String",
            "uniqueItems" : true
          }
        },
        "required" : [ "operator", "value" ],
        "title" : "FilterOperatorAndValue_Set_String"
      },
      "PagedSearchResponse_Package-PackageFilters" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Package"
            },
            "title" : "List_Package"
          },
          "filters" : {
            "$ref" : "#/components/schemas/PackageFilters"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "filters", "pagination" ],
        "title" : "PagedSearchResponse_Package-PackageFilters"
      },
      "Licenses" : {
        "type" : "object",
        "properties" : {
          "processedDeclaredLicenses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "List_String"
          }
        },
        "required" : [ "processedDeclaredLicenses" ],
        "title" : "Licenses"
      },
      "Project" : {
        "type" : "object",
        "properties" : {
          "authors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Set_String",
            "uniqueItems" : true
          },
          "cpe" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "declaredLicenses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Set_String",
            "uniqueItems" : true
          },
          "definitionFilePath" : {
            "type" : "string",
            "title" : "String"
          },
          "description" : {
            "type" : "string",
            "title" : "String"
          },
          "homepageUrl" : {
            "type" : "string",
            "title" : "String"
          },
          "identifier" : {
            "$ref" : "#/components/schemas/Identifier"
          },
          "processedDeclaredLicense" : {
            "$ref" : "#/components/schemas/ProcessedDeclaredLicense"
          },
          "scopeNames" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "Set_String",
            "uniqueItems" : true
          },
          "vcs" : {
            "$ref" : "#/components/schemas/VcsInfo"
          },
          "vcsProcessed" : {
            "$ref" : "#/components/schemas/VcsInfo"
          }
        },
        "required" : [ "authors", "declaredLicenses", "definitionFilePath", "description", "homepageUrl", "identifier", "processedDeclaredLicense", "scopeNames", "vcs", "vcsProcessed" ],
        "title" : "Project"
      },
      "PagedResponse_Project" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Project"
            },
            "title" : "List_Project"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_Project"
      },
      "Secret" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "name" ],
        "title" : "Secret"
      },
      "PagedResponse_Secret" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Secret"
            },
            "title" : "List_Secret"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PagingData"
          }
        },
        "required" : [ "data", "pagination" ],
        "title" : "PagedResponse_Secret"
      },
      "UpdateSecret" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "title" : "String"
          },
          "value" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "title" : "UpdateSecret"
      },
      "CreateSecret" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "value" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "name", "value" ],
        "title" : "CreateSecret"
      }
    },
    "examples" : { },
    "securitySchemes" : {
      "token" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "http://localhost:8081/realms/master/protocol/openid-connect/auth",
            "tokenUrl" : "http://localhost:8081/realms/master/protocol/openid-connect/token",
            "scopes" : { }
          }
        }
      }
    }
  },
  "webhooks" : { }
}