/*
 * Copyright (C) 2022 The ORT Server Authors (See <https://github.com/eclipse-apoapsis/ort-server/blob/main/NOTICE>)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package org.eclipse.apoapsis.ortserver.dao.tables.runs.advisor

import org.eclipse.apoapsis.ortserver.model.runs.advisor.VulnerabilityReference

import org.jetbrains.exposed.dao.LongEntity
import org.jetbrains.exposed.dao.LongEntityClass
import org.jetbrains.exposed.dao.id.EntityID
import org.jetbrains.exposed.dao.id.LongIdTable

/**
 * A table to represent detailed information about a vulnerability.
 */
object VulnerabilityReferencesTable : LongIdTable("vulnerability_references") {
    val vulnerabilityId = reference("vulnerability_id", VulnerabilitiesTable)

    val url = text("url")
    val scoringSystem = text("scoring_system").nullable()
    val severity = text("severity").nullable()
    val score = float("score").nullable()
    val vector = text("vector").nullable()
}

class VulnerabilityReferenceDao(id: EntityID<Long>) : LongEntity(id) {
    companion object : LongEntityClass<VulnerabilityReferenceDao>(VulnerabilityReferencesTable)

    var vulnerability by VulnerabilityDao referencedOn VulnerabilityReferencesTable.vulnerabilityId

    var url by VulnerabilityReferencesTable.url
    var scoringSystem by VulnerabilityReferencesTable.scoringSystem
    var severity by VulnerabilityReferencesTable.severity
    var score by VulnerabilityReferencesTable.score
    var vector by VulnerabilityReferencesTable.vector

    fun mapToModel() = VulnerabilityReference(url, scoringSystem, severity, score, vector)
}
